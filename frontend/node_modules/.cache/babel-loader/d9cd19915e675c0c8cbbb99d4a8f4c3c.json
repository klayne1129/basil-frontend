{"ast":null,"code":"var _jsxFileName = \"/Users/KatieLayne/Documents/basil-app/basil-app/src/components/recipes/RecipeApp.jsx\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom';\nimport { removeTypeDuplicates } from '@babel/types';\nimport AuthenticationService from './AuthenticationService.js';\nimport AuthenticatedRoute from './AuthenticatedRoute.jsx';\n\nclass RecipeApp extends Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: \"RecipeApp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, React.createElement(React.Fragment, null, React.createElement(HeaderComponent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      component: LoginComponent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/login\",\n      component: LoginComponent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }), React.createElement(AuthenticatedRoute, {\n      path: \"/welcome/:name\",\n      component: WelcomeComponent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }), React.createElement(AuthenticatedRoute, {\n      path: \"/recipes\",\n      component: ListRecipesComponent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }), React.createElement(AuthenticatedRoute, {\n      path: \"/logout\",\n      component: LogoutComponent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }), React.createElement(Route, {\n      component: ErrorComponent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    })), React.createElement(FooterComponent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }))));\n  }\n\n} //the nav bar basic code\n//menu links enabled/disabled based on user authentication\n\n\nclass HeaderComponent extends Component {\n  render() {\n    const isUserLoggedIn = AuthenticationService.isUserLoggedIn(); // console.log(isUserLoggedIn);\n\n    return React.createElement(\"header\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"nav\", {\n      className: \"navbar navbar-expand-md navbar-dark bg-dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"navbar-brand\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"navbar-nav\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, isUserLoggedIn && React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/welcome/Basil\",\n      className: \"nav-link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Basil\")))), React.createElement(\"ul\", {\n      className: \"navbar-nav\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, isUserLoggedIn && React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/welcome/Basil\",\n      className: \"nav-link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Home\")), isUserLoggedIn && React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/recipes\",\n      className: \"nav-link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Recipes\"))), React.createElement(\"ul\", {\n      className: \"navbar-nav navbar-collapse justify-content-end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, !isUserLoggedIn && React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/login\",\n      className: \"nav-link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Login\")), isUserLoggedIn && React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/logout\",\n      className: \"nav-link\",\n      onClick: AuthenticationService.logout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Logout\")))));\n  }\n\n}\n\nclass LogoutComponent extends Component {\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"You are logged out.\"), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Thanks for using Basil!\"));\n  }\n\n}\n\nclass FooterComponent extends Component {\n  render() {\n    return React.createElement(\"footer\", {\n      className: \"footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Alrights Reserved 2020 @Basil.com\"));\n  }\n\n}\n\nclass ListRecipesComponent extends Component {\n  // hardcoding some table information for learning. Will replace\n  constructor(props) {\n    super(props);\n    this.state = {\n      recipes: [{\n        id: 1,\n        name: \"French Toast\",\n        directions: \"Make it good.\",\n        ingredients: \"4 eggs, 2/3 cups of milk, 8 slices of bread, butter, maple syrup\"\n      }, {\n        id: 2,\n        name: \"Scrambled Eggs\",\n        directions: \"Step 1 beat eggs. Step 2 fry them.\",\n        ingredients: \"2 eggs\"\n      }, {\n        id: 4,\n        name: \"Cereal\",\n        directions: \"Step 1 add cereal to bowl. Step 2 add milk to bowl.\",\n        ingredients: \"cereal, milk\"\n      }]\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"List of Recipes\"), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Directions\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Ingredients\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, this.state.recipes.map(recipe => React.createElement(\"tr\", {\n      key: recipe.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, recipe.name), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, recipe.directions), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, recipe.ingredients)))))));\n  }\n\n}\n\nclass ErrorComponent extends Component {\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"An Error has occured. Page not found.\");\n  }\n\n}\n\nclass WelcomeComponent extends Component {\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"Welcome!\"), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \"Welcome \", this.props.match.params.name, \". You can manage your recipes \", React.createElement(Link, {\n      to: \"/recipes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"here\"), \".\"));\n  }\n\n}\n\nclass LoginComponent extends Component {\n  constructor(props) {\n    super(props); // added state to component\n\n    this.state = {\n      username: 'user',\n      password: '',\n      hasLoginFailed: false,\n      showSuccessMessage: false\n    }; //bind methods\n\n    this.handleChange = this.handleChange.bind(this);\n    this.loginClicked = this.loginClicked.bind(this);\n  } //whenever there is a change in a text element an event will handle it\n  //event updates the state \n\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  loginClicked() {\n    //username: user, password: user\n    //hardcoded for now change later\n    //whenever a user logs in successfully, send that data to session storage\n    if (this.state.username === 'user' && this.state.password === 'user') {\n      AuthenticationService.registerSuccessfulLogin(this.state.username, this.state.password);\n      this.props.history.push(`/welcome/${this.state.username}`);\n    } else {\n      // console.log('failed')\n      this.setState({\n        showSuccessMessage: false\n      });\n      this.setState({\n        hasLoginFailed: true\n      });\n    } // console.log(this.state)\n\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, \"Login\"), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, this.state.hasLoginFailed && React.createElement(\"div\", {\n      className: \"alert alert-warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, \"Invalid Credentials\"), this.state.showSuccessMessage && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, \"Login Successful\"), \"Username: \", React.createElement(\"input\", {\n      type: \"text\",\n      name: \"username\",\n      value: this.state.username,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }), \"Password: \", React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      value: this.state.password,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"btn btn-success\",\n      onClick: this.loginClicked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, \"Login\")));\n  }\n\n} // function ShowInvalidCredentials(props){\n//         if(props.hasLoginFailed) {\n//             return <div>Invalid Credentials</div>\n//         }\n//         return null\n// }\n// function ShowLoginSuccessMessage(props){\n//     if(props.showSuccessMessage){\n//         return <div>Login Successful</div>\n//     }\n//     return null\n// }\n\n\nexport default RecipeApp;","map":{"version":3,"sources":["/Users/KatieLayne/Documents/basil-app/basil-app/src/components/recipes/RecipeApp.jsx"],"names":["React","Component","BrowserRouter","Router","Route","Switch","Link","removeTypeDuplicates","AuthenticationService","AuthenticatedRoute","RecipeApp","render","LoginComponent","WelcomeComponent","ListRecipesComponent","LogoutComponent","ErrorComponent","HeaderComponent","isUserLoggedIn","logout","FooterComponent","constructor","props","state","recipes","id","name","directions","ingredients","map","recipe","match","params","username","password","hasLoginFailed","showSuccessMessage","handleChange","bind","loginClicked","event","setState","target","value","registerSuccessfulLogin","history","push"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport {BrowserRouter as Router, Route, Switch, Link} from 'react-router-dom'\nimport { removeTypeDuplicates } from '@babel/types'\nimport AuthenticationService from './AuthenticationService.js'\nimport AuthenticatedRoute from './AuthenticatedRoute.jsx'\n\nclass RecipeApp extends Component {\n    render() {\n        return (\n            <div className=\"RecipeApp\">\n\n                {/* allows you to type in browser to route to specific pages */}\n                <Router>\n                    <>\n                        <HeaderComponent/>\n                        {/* switch makes sure only one route is active at a time */}\n                        {/* AuthenticatedRoute prevents unathenticated users from trying \n                        to access restricted pages via typing in the browser */}\n                        <Switch>\n                            <Route path=\"/\" exact component={LoginComponent}/>\n                            <Route path=\"/login\" component={LoginComponent}/>\n                            <AuthenticatedRoute path=\"/welcome/:name\" component={WelcomeComponent}/>\n                            <AuthenticatedRoute path=\"/recipes\" component={ListRecipesComponent}/>\n                            <AuthenticatedRoute path=\"/logout\" component={LogoutComponent}/>\n                            <Route component={ErrorComponent}/>\n                        </Switch>\n                        <FooterComponent/>\n                    </>\n                </Router>\n                {/* <LoginComponent/>\n                <WelcomeComponent/> */}\n            </div>\n            \n        )\n    }\n}\n\n//the nav bar basic code\n//menu links enabled/disabled based on user authentication\nclass HeaderComponent extends Component {\n    render() {\n\n        const isUserLoggedIn = AuthenticationService.isUserLoggedIn()\n        // console.log(isUserLoggedIn);\n\n        return (\n            <header>\n                <nav className=\"navbar navbar-expand-md navbar-dark bg-dark\">\n                    <div className=\"navbar-brand\">\n                        <ul className=\"navbar-nav\">\n                            {isUserLoggedIn && <li><Link to=\"/welcome/Basil\" className=\"nav-link\">Basil</Link></li>}\n                        </ul>\n                        </div>\n                    <ul className=\"navbar-nav\"> \n                        {isUserLoggedIn && <li><Link to=\"/welcome/Basil\" className=\"nav-link\">Home</Link></li>}\n                        {isUserLoggedIn && <li><Link to=\"/recipes\" className=\"nav-link\">Recipes</Link></li>}\n                    </ul>\n                    <ul className=\"navbar-nav navbar-collapse justify-content-end\">\n                        {!isUserLoggedIn && <li><Link to=\"/login\" className=\"nav-link\">Login</Link></li>}\n                        {isUserLoggedIn && <li><Link to=\"/logout\" className=\"nav-link\" onClick={AuthenticationService.logout}>Logout</Link></li>}\n                    </ul>\n                </nav>\n            </header>\n        )\n    }\n}\n\nclass LogoutComponent extends Component {\n    render() {\n        return (\n            <>\n                <h1>You are logged out.</h1>\n                <div className=\"container\">Thanks for using Basil!</div>\n            </>\n        )\n    }\n}\n\nclass FooterComponent extends Component {\n    render() {\n        return (\n            <footer className=\"footer\">\n                <span className=\"text-muted\">Alrights Reserved 2020 @Basil.com</span>\n            </footer>\n        )\n    }\n}\n\nclass ListRecipesComponent extends Component{\n    // hardcoding some table information for learning. Will replace\n    constructor(props){\n        super(props)\n        this.state = {\n            recipes : [\n                    {id:1, name:\"French Toast\", directions: \"Make it good.\", ingredients: \"4 eggs, 2/3 cups of milk, 8 slices of bread, butter, maple syrup\"}, \n                    {id:2, name:\"Scrambled Eggs\", directions: \"Step 1 beat eggs. Step 2 fry them.\", ingredients: \"2 eggs\"},\n                    {id:4, name:\"Cereal\", directions: \"Step 1 add cereal to bowl. Step 2 add milk to bowl.\", ingredients: \"cereal, milk\"}\n                ]\n        }\n    }\n    render() {\n        return  (   \n                     <div>\n                        <h1>List of Recipes</h1>\n                        <div className=\"container\">\n                            <table className=\"table\">\n                                <thead>\n                                    <tr>\n                                        <th>Name</th>\n                                        <th>Directions</th>\n                                        <th>Ingredients</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {\n                                        this.state.recipes.map (\n                                            recipe =>\n\n                                        \n                                            <tr key={recipe.id}>\n                                                <td>{recipe.name}</td>\n                                                <td>{recipe.directions}</td>\n                                                <td>{recipe.ingredients}</td>\n                                            \n                                            </tr>\n                                        )\n                                    }\n\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                )\n    }\n}\n\nclass ErrorComponent extends Component {\n    render() {\n        return  <div>An Error has occured. Page not found.</div>\n    }\n }\n\nclass WelcomeComponent extends Component {\n    render() {\n        return  (\n                     <>\n                        <h1>Welcome!</h1>\n                        <div className=\"container\">\n                        Welcome {this.props.match.params.name}. You can manage your recipes <Link to=\"/recipes\">here</Link>.\n                        </div>\n\n                    </>\n\n        )\n        \n    }\n}\n\n\nclass LoginComponent extends Component {\n    constructor(props) {\n        super(props)\n        // added state to component\n        this.state = {\n            username: 'user',\n            password: '',\n            hasLoginFailed: false,\n            showSuccessMessage: false\n        \n        }\n        //bind methods\n        this.handleChange = this.handleChange.bind(this)\n        this.loginClicked = this.loginClicked.bind(this)\n        \n        \n\n        }\n        //whenever there is a change in a text element an event will handle it\n        //event updates the state \n        handleChange(event) {\n            this.setState(\n                {\n                    [event.target.name]\n                        :event.target.value\n                }\n            )\n        }\n    \n        loginClicked(){\n            //username: user, password: user\n            //hardcoded for now change later\n            //whenever a user logs in successfully, send that data to session storage\n            if(this.state.username=== 'user' && this.state.password=== 'user'){\n        \n                AuthenticationService.registerSuccessfulLogin(this.state.username,this.state.password);\n                this.props.history.push(`/welcome/${this.state.username}`)\n\n            } else {\n                // console.log('failed')\n                this.setState({showSuccessMessage:false})\n                this.setState({hasLoginFailed:true})\n            }\n            // console.log(this.state)\n        }\n\n\n    render() {\n        return (\n            <div>\n                <h1>Login</h1>\n                <div className=\"container\">\n                {/* give userfeedback based on credentials */}\n                {/* if true show message */}\n                {this.state.hasLoginFailed && <div className=\"alert alert-warning\">Invalid Credentials</div>}\n                {this.state.showSuccessMessage && <div>Login Successful</div>}\n            \n                {/* //value of buttons are tied back to the value of this state */}\n                Username: <input type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange}/>\n\n                Password: <input type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange}/>\n                <button className=\"btn btn-success\" onClick={this.loginClicked}>Login</button>\n                </div>\n            </div>\n        )\n    }\n\n    \n}\n\n// function ShowInvalidCredentials(props){\n//         if(props.hasLoginFailed) {\n//             return <div>Invalid Credentials</div>\n//         }\n//         return null\n// }\n\n// function ShowLoginSuccessMessage(props){\n//     if(props.showSuccessMessage){\n//         return <div>Login Successful</div>\n//     }\n//     return null\n// }\n\nexport default RecipeApp\n\n\n"]},"metadata":{},"sourceType":"module"}