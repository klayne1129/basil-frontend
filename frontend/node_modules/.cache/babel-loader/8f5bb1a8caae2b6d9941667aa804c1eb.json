{"ast":null,"code":"import Axios from \"axios\";\n\nclass RecipeDataService {\n  //passing name as a parameter and removing the hardcode makes it customizable for users\n  retrieveAllRecipes(name) {\n    // console.log('executed service')\n    //tell promise to get desired url we created in java and eclipse\n    return Axios.get(`http://localhost:8080/users/${name}/recipes`);\n  }\n\n  retrieveRecipe(name, id) {\n    return Axios.get(`http://localhost:8080/users/${name}/recipes/${id}`);\n  }\n\n  deleteRecipe(name, id) {\n    // console.log('executed service')\n    //tell promise to get desired url we created in java and eclipse\n    return Axios.delete(`http://localhost:8080/users/${name}/recipes/${id}`);\n  }\n\n  updateRecipe(name, id, recipe) {\n    // console.log('executed service')\n    //tell promise to get desired url we created in java and eclipse\n    return Axios.put(`http://localhost:8080/users/${name}/recipes/${id}`, recipe);\n  }\n\n  createRecipe(name, recipe) {\n    // console.log('executed service')\n    //tell promise to get desired url we created in java and eclipse\n    return Axios.post(`http://localhost:8080/users/${name}/recipes`, recipe);\n  }\n\n}\n\nexport default new RecipeDataService();","map":{"version":3,"sources":["/Users/KatieLayne/Documents/basil-app/basil-app/src/api/recipes/RecipeDataService.js"],"names":["Axios","RecipeDataService","retrieveAllRecipes","name","get","retrieveRecipe","id","deleteRecipe","delete","updateRecipe","recipe","put","createRecipe","post"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,iBAAN,CAAwB;AACpB;AACAC,EAAAA,kBAAkB,CAACC,IAAD,EAAO;AACrB;AACA;AACA,WAAOH,KAAK,CAACI,GAAN,CAAW,+BAA8BD,IAAK,UAA9C,CAAP;AACH;;AAEDE,EAAAA,cAAc,CAACF,IAAD,EAAOG,EAAP,EAAW;AAErB,WAAON,KAAK,CAACI,GAAN,CAAW,+BAA8BD,IAAK,YAAWG,EAAG,EAA5D,CAAP;AACH;;AAEDC,EAAAA,YAAY,CAACJ,IAAD,EAAOG,EAAP,EAAW;AACnB;AACA;AACA,WAAON,KAAK,CAACQ,MAAN,CAAc,+BAA8BL,IAAK,YAAWG,EAAG,EAA/D,CAAP;AACH;;AAEDG,EAAAA,YAAY,CAACN,IAAD,EAAOG,EAAP,EAAWI,MAAX,EAAmB;AAC3B;AACA;AACA,WAAOV,KAAK,CAACW,GAAN,CAAW,+BAA8BR,IAAK,YAAWG,EAAG,EAA5D,EAA+DI,MAA/D,CAAP;AACH;;AAEDE,EAAAA,YAAY,CAACT,IAAD,EAAOO,MAAP,EAAe;AACvB;AACA;AACA,WAAOV,KAAK,CAACa,IAAN,CAAY,+BAA8BV,IAAK,UAA/C,EAA0DO,MAA1D,CAAP;AACH;;AA7BmB;;AAiCxB,eAAe,IAAIT,iBAAJ,EAAf","sourcesContent":["import Axios from \"axios\"\n\nclass RecipeDataService {\n    //passing name as a parameter and removing the hardcode makes it customizable for users\n    retrieveAllRecipes(name) {\n        // console.log('executed service')\n        //tell promise to get desired url we created in java and eclipse\n        return Axios.get(`http://localhost:8080/users/${name}/recipes`)   \n    }\n\n    retrieveRecipe(name, id) {\n        \n        return Axios.get(`http://localhost:8080/users/${name}/recipes/${id}`)   \n    }\n\n    deleteRecipe(name, id) {\n        // console.log('executed service')\n        //tell promise to get desired url we created in java and eclipse\n        return Axios.delete(`http://localhost:8080/users/${name}/recipes/${id}`)   \n    }\n\n    updateRecipe(name, id, recipe) {\n        // console.log('executed service')\n        //tell promise to get desired url we created in java and eclipse\n        return Axios.put(`http://localhost:8080/users/${name}/recipes/${id}`, recipe)   \n    }\n\n    createRecipe(name, recipe) {\n        // console.log('executed service')\n        //tell promise to get desired url we created in java and eclipse\n        return Axios.post(`http://localhost:8080/users/${name}/recipes`, recipe)   \n    }\n\n}\n\nexport default new RecipeDataService()"]},"metadata":{},"sourceType":"module"}