{"ast":null,"code":"var _jsxFileName = \"/Users/KatieLayne/Documents/basil-app/basil-app/src/components/recipes/RegisterComponent.jsx\";\nimport React, { Component } from 'react';\nimport UserDataService from '../../api/recipes/UserDataService.js';\nimport AuthenticationService from './AuthenticationService.js';\n\nclass RegisterComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: '',\n      verifyPassword: '',\n      role: \"ROLE_USER\",\n      hasSignUpFailed: false,\n      showSuccessMessage: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.signUpClicked = this.signUpClicked.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  } // signUpClicked() {\n  //     console.log(\"signUp clicked\");\n  //     let user = {\n  //         username: this.state.username,\n  //         password: this.state.password,\n  //         role: \"ROLE_USER\"\n  //     }\n  //     // using my default user to authorize any new user\n  //     AuthenticationService\n  //         .executeJWTAuthenticationService(\"basil\",\"admin\")\n  //         .then((response) => {\n  //             AuthenticationService.registerSuccessfulLoginForJwt(this.state.username, response.data.token)\n  //             UserDataService.createUser(user)\n  //             this.props.history.push(`/welcome}`)\n  //         })\n  // }\n\n\n  signUpClicked() {\n    let user = {\n      username: this.state.username,\n      password: this.state.password,\n      role: \"ROLE_USER\"\n    };\n\n    if (this.state.password === this.state.verifyPassword) {\n      UserDataService.createUser(user);\n      this.setState({\n        showSuccessMessage: true\n      });\n    } else {\n      this.setState({\n        hasSignUpFailed: true\n      });\n    }\n  } // loginClicked(){\n  //     AuthenticationService\n  //     .executeJWTAuthenticationService(this.state.username, this.state.password)\n  //     .then((response) => {\n  //         AuthenticationService.registerSuccessfulLoginForJwt(this.state.username,response.data.token)\n  //         this.props.history.push(`/welcome/${this.state.username}`)\n  //     }).catch( () =>{\n  //         this.setState({showSuccessMessage:false})\n  //         this.setState({hasLoginFailed:true})\n  //     })\n  // }\n\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Registration\"), this.state.hasSignUpFailed && React.createElement(\"div\", {\n      className: \"alert alert-warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Passwords Do not match\"), this.state.showSuccessMessage && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Registration Successful\"), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Username: \", React.createElement(\"input\", {\n      type: \"text\",\n      name: \"username\",\n      value: this.state.username,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), \"Password: \", React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      value: this.state.password,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), \"Verify Password: \", React.createElement(\"input\", {\n      type: \"password\",\n      name: \"verifyPassword\",\n      value: this.state.verifyPassword,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-success\",\n      onClick: this.signUpClicked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Sign Up\")));\n  }\n\n}\n\nexport default RegisterComponent;","map":{"version":3,"sources":["/Users/KatieLayne/Documents/basil-app/basil-app/src/components/recipes/RegisterComponent.jsx"],"names":["React","Component","UserDataService","AuthenticationService","RegisterComponent","constructor","props","state","username","password","verifyPassword","role","hasSignUpFailed","showSuccessMessage","handleChange","bind","signUpClicked","event","setState","target","name","value","user","createUser","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport UserDataService from '../../api/recipes/UserDataService.js'\nimport AuthenticationService from './AuthenticationService.js'\n\n\n\nclass RegisterComponent extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            username: '',\n            password: '',\n            verifyPassword: '',\n            role: \"ROLE_USER\",\n            hasSignUpFailed: false,\n            showSuccessMessage: false\n           \n        }\n        this.handleChange = this.handleChange.bind(this)\n        this.signUpClicked = this.signUpClicked.bind(this)\n     \n    }\n\n\n    handleChange(event) {\n        this.setState(\n            {\n                [event.target.name]\n                    : event.target.value\n            }\n        )\n    }\n\n    // signUpClicked() {\n    //     console.log(\"signUp clicked\");\n    //     let user = {\n    //         username: this.state.username,\n    //         password: this.state.password,\n    //         role: \"ROLE_USER\"\n\n    //     }\n    //     // using my default user to authorize any new user\n    //     AuthenticationService\n    //         .executeJWTAuthenticationService(\"basil\",\"admin\")\n    //         .then((response) => {\n    //             AuthenticationService.registerSuccessfulLoginForJwt(this.state.username, response.data.token)\n    //             UserDataService.createUser(user)\n    //             this.props.history.push(`/welcome}`)\n    //         })\n    // }\n\n    signUpClicked() {\n        let user = {\n            username: this.state.username,\n            password: this.state.password,\n            role: \"ROLE_USER\"\n\n        }\n\n        if(this.state.password === this.state.verifyPassword){\n        UserDataService.createUser(user)\n        this.setState({showSuccessMessage:true})\n        } else {\n            this.setState({hasSignUpFailed:true})\n        }  \n    }\n\n    // loginClicked(){\n    //     AuthenticationService\n    //     .executeJWTAuthenticationService(this.state.username, this.state.password)\n    //     .then((response) => {\n    //         AuthenticationService.registerSuccessfulLoginForJwt(this.state.username,response.data.token)\n    //         this.props.history.push(`/welcome/${this.state.username}`)\n    //     }).catch( () =>{\n    //         this.setState({showSuccessMessage:false})\n    //         this.setState({hasLoginFailed:true})\n    //     })\n    // }\n\n    render() {\n        return (\n            <div >\n                <h1>Registration</h1>\n                {this.state.hasSignUpFailed && <div className=\"alert alert-warning\">Passwords Do not match</div>}\n                {this.state.showSuccessMessage && <div>Registration Successful</div>}\n                <div className=\"container\">\n\n\n\n                    {/* //value of buttons are tied back to the value of this state */}\n                    Username: <input type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange} />\n\n                    Password: <input type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\n                    Verify Password: <input type=\"password\" name=\"verifyPassword\" value={this.state.verifyPassword} onChange={this.handleChange} />\n                    <button type='submit' className=\"btn btn-success\" onClick={this.signUpClicked}>Sign Up</button>\n\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default RegisterComponent"]},"metadata":{},"sourceType":"module"}