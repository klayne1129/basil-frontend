{"ast":null,"code":"var _jsxFileName = \"/Users/KatieLayne/Documents/basil-app/basil-app/src/components/recipes/RegisterComponent.jsx\";\nimport React, { Component } from 'react';\nimport UserDataService from '../../api/recipes/UserDataService.js';\nimport AuthenticationService from './AuthenticationService.js';\n\nclass RegisterComponent extends Component {\n  constructor(props) {\n    super(props); // added state to component\n\n    this.state = {\n      username: '',\n      password: ''\n    }; //bind methods\n\n    this.handleChange = this.handleChange.bind(this);\n    this.signUpClicked = this.signUpClicked.bind(this);\n  } //whenever there is a change in a text element an event will handle it\n  //event updates the state \n\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  } // registerClicked(values) {\n  //   let user = {\n  //     username: values.username,\n  //     password: values.password\n  //   }\n  //   console.log(\"sign up clicked\");\n  //       UserDataService.createUser(user)\n  //       this.props.history.push(`/login}`)\n  // }\n\n\n  signUpClicked() {\n    let user = {\n      username: values.username,\n      password: values.password\n    };\n    AuthenticationService.executeJWTAuthenticationService(this.state.username, this.state.password).then(response => {\n      AuthenticationService.registerSuccessfulLoginForJwt(this.state.username, response.data.token);\n      UserDataService.createUser(user);\n      this.props.history.push(`/login}`);\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Registration\"), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Username: \", React.createElement(\"input\", {\n      type: \"text\",\n      name: \"username\",\n      value: this.state.username,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), \"Password: \", React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      value: this.state.password,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-success\",\n      onClick: this.signUpClicked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Sign Up\")));\n  }\n\n}\n\nexport default RegisterComponent;","map":{"version":3,"sources":["/Users/KatieLayne/Documents/basil-app/basil-app/src/components/recipes/RegisterComponent.jsx"],"names":["React","Component","UserDataService","AuthenticationService","RegisterComponent","constructor","props","state","username","password","handleChange","bind","signUpClicked","event","setState","target","name","value","user","values","executeJWTAuthenticationService","then","response","registerSuccessfulLoginForJwt","data","token","createUser","history","push","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,eAAP,MAA4B,sCAA5B;AACA,OAAOC,qBAAP,MAAkC,4BAAlC;;AAIA,MAAMC,iBAAN,SAAgCH,SAAhC,CAA0C;AACtCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN,EADe,CAEf;;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,EADD;AAETC,MAAAA,QAAQ,EAAE;AAFD,KAAb,CAHe,CAOf;;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBD,IAAnB,CAAwB,IAAxB,CAArB;AAEC,GAZiC,CAalC;AACA;;;AACAD,EAAAA,YAAY,CAACG,KAAD,EAAQ;AAChB,SAAKC,QAAL,CACI;AACI,OAACD,KAAK,CAACE,MAAN,CAAaC,IAAd,GACKH,KAAK,CAACE,MAAN,CAAaE;AAFtB,KADJ;AAMH,GAtBiC,CAwBxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAL,EAAAA,aAAa,GAAE;AACb,QAAIM,IAAI,GAAG;AACTV,MAAAA,QAAQ,EAAEW,MAAM,CAACX,QADR;AAETC,MAAAA,QAAQ,EAAEU,MAAM,CAACV;AAFR,KAAX;AAIAN,IAAAA,qBAAqB,CACpBiB,+BADD,CACiC,KAAKb,KAAL,CAAWC,QAD5C,EACsD,KAAKD,KAAL,CAAWE,QADjE,EAECY,IAFD,CAEOC,QAAD,IAAc;AAChBnB,MAAAA,qBAAqB,CAACoB,6BAAtB,CAAoD,KAAKhB,KAAL,CAAWC,QAA/D,EAAwEc,QAAQ,CAACE,IAAT,CAAcC,KAAtF;AACAvB,MAAAA,eAAe,CAACwB,UAAhB,CAA2BR,IAA3B;AACA,WAAKZ,KAAL,CAAWqB,OAAX,CAAmBC,IAAnB,CAAyB,SAAzB;AACH,KAND;AAOH;;AAIGC,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAGI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAKc;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,UAAxB;AAAmC,MAAA,KAAK,EAAE,KAAKtB,KAAL,CAAWC,QAArD;AAA+D,MAAA,QAAQ,EAAE,KAAKE,YAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALd,gBAOc;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,IAAI,EAAC,UAA5B;AAAuC,MAAA,KAAK,EAAE,KAAKH,KAAL,CAAWE,QAAzD;AAAmE,MAAA,QAAQ,EAAE,KAAKC,YAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPd,EASI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,iBAAhC;AAAkD,MAAA,OAAO,EAAE,KAAKE,aAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBATJ,CAHJ,CADJ;AAkBH;;AArEqC;;AAwE1C,eAAeR,iBAAf","sourcesContent":["import React, {Component} from 'react'\nimport UserDataService from '../../api/recipes/UserDataService.js'\nimport AuthenticationService from './AuthenticationService.js'\n\n\n\nclass RegisterComponent extends Component {\n    constructor(props) {\n        super(props)\n        // added state to component\n        this.state = {\n            username: '',\n            password: '',\n        }\n        //bind methods\n        this.handleChange = this.handleChange.bind(this)\n        this.signUpClicked = this.signUpClicked.bind(this)\n    \n        }\n        //whenever there is a change in a text element an event will handle it\n        //event updates the state \n        handleChange(event) {\n            this.setState(\n                {\n                    [event.target.name]\n                        :event.target.value\n                }\n            )\n        }\n       \n  // registerClicked(values) {\n  //   let user = {\n  //     username: values.username,\n  //     password: values.password\n  //   }\n  //   console.log(\"sign up clicked\");\n  //       UserDataService.createUser(user)\n  //       this.props.history.push(`/login}`)\n  // }\n\n  signUpClicked(){\n    let user = {\n      username: values.username,\n      password: values.password\n    }\n    AuthenticationService\n    .executeJWTAuthenticationService(this.state.username, this.state.password)\n    .then((response) => {\n        AuthenticationService.registerSuccessfulLoginForJwt(this.state.username,response.data.token)\n        UserDataService.createUser(user)\n        this.props.history.push(`/login}`)\n    })\n}\n\n  \n\n    render() {\n        return (\n            <div >\n                <h1>Registration</h1>\n\n                <div className=\"container\">\n\n                  \n\n                    {/* //value of buttons are tied back to the value of this state */}\n                    Username: <input type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange} />\n\n                    Password: <input type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\n\n                    <button type='submit' className=\"btn btn-success\" onClick={this.signUpClicked}>Sign Up</button>\n\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default RegisterComponent"]},"metadata":{},"sourceType":"module"}