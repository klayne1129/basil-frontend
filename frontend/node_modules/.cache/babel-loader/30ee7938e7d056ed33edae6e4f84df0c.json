{"ast":null,"code":"var _jsxFileName = \"/Users/KatieLayne/Documents/basil-app/basil-app/src/components/recipes/ListRecipesComponent.jsx\";\nimport React, { Component } from 'react';\nimport RecipeDataService from '../../api/recipes/RecipeDataService.js';\nimport AuthenticationService from './AuthenticationService.js';\n\nclass ListRecipesComponent extends Component {\n  // hardcoding some table information for learning. Will replace\n  constructor(props) {\n    super(props);\n    this.state = {\n      recipes: []\n    };\n    this.deleteRecipeClicked = this.deleteRecipeClicked.bind(this);\n  } //dont call initial api in the constructor\n  //if you do the state doesn't reinitialize until the api is finished \n\n\n  componentDidMount() {\n    //use the username by using authentication service\n    let username = AuthenticationService.getLoggedInUser();\n    RecipeDataService.retrieveAllRecipes(username).then(response => {\n      // console.log(response)\n      this.setState({\n        recipes: response.data\n      });\n    });\n  }\n\n  deleteRecipeClicked(id) {\n    let username = AuthenticationService.getLoggedInUser(); // console.log(id + \" \" + username)\n\n    RecipeDataService.deleteRecipe(username, id);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"List of Recipes\"), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Directions\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Ingredients\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Delete\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, this.state.recipes.map(recipe => React.createElement(\"tr\", {\n      key: recipe.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, recipe.name), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, recipe.directions), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, recipe.ingredients), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-warning\",\n      onClick: () => this.deleteRecipeClicked(recipe.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Delete\"))))))));\n  }\n\n}\n\nexport default ListRecipesComponent;","map":{"version":3,"sources":["/Users/KatieLayne/Documents/basil-app/basil-app/src/components/recipes/ListRecipesComponent.jsx"],"names":["React","Component","RecipeDataService","AuthenticationService","ListRecipesComponent","constructor","props","state","recipes","deleteRecipeClicked","bind","componentDidMount","username","getLoggedInUser","retrieveAllRecipes","then","response","setState","data","id","deleteRecipe","render","map","recipe","name","directions","ingredients"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,iBAAP,MAA8B,wCAA9B;AACA,OAAOC,qBAAP,MAAkC,4BAAlC;;AAEA,MAAMC,oBAAN,SAAmCH,SAAnC,CAA4C;AACxC;AACAI,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAG;AADD,KAAb;AAGA,SAAKC,mBAAL,GAA2B,KAAKA,mBAAL,CAAyBC,IAAzB,CAA8B,IAA9B,CAA3B;AACH,GARuC,CAUxC;AACA;;;AACAC,EAAAA,iBAAiB,GAAG;AAEhB;AACA,QAAIC,QAAQ,GAAGT,qBAAqB,CAACU,eAAtB,EAAf;AACAX,IAAAA,iBAAiB,CAACY,kBAAlB,CAAqCF,QAArC,EACKG,IADL,CAEQC,QAAQ,IAAI;AACR;AACA,WAAKC,QAAL,CAAc;AAACT,QAAAA,OAAO,EAAGQ,QAAQ,CAACE;AAApB,OAAd;AACH,KALT;AAOH;;AAEDT,EAAAA,mBAAmB,CAACU,EAAD,EAAK;AACpB,QAAIP,QAAQ,GAAGT,qBAAqB,CAACU,eAAtB,EAAf,CADoB,CAEpB;;AACAX,IAAAA,iBAAiB,CAACkB,YAAlB,CAA+BR,QAA/B,EAAyCO,EAAzC;AACH;;AACDE,EAAAA,MAAM,GAAG;AACL,WACa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADH,EAEG;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,CADJ,CADJ,EAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQ,KAAKd,KAAL,CAAWC,OAAX,CAAmBc,GAAnB,CACIC,MAAM,IAGN;AAAI,MAAA,GAAG,EAAEA,MAAM,CAACJ,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKI,MAAM,CAACC,IAAZ,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,MAAM,CAACE,UAAZ,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKF,MAAM,CAACG,WAAZ,CAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AAAoC,MAAA,OAAO,EAAE,MAAM,KAAKjB,mBAAL,CAAyBc,MAAM,CAACJ,EAAhC,CAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAJ,CAJJ,CAJJ,CAFR,CAVJ,CADJ,CAFH,CADb;AAmCH;;AAlEuC;;AAqE5C,eAAef,oBAAf","sourcesContent":["import React, {Component} from 'react'\nimport RecipeDataService from '../../api/recipes/RecipeDataService.js'\nimport AuthenticationService from './AuthenticationService.js'\n\nclass ListRecipesComponent extends Component{\n    // hardcoding some table information for learning. Will replace\n    constructor(props){\n        super(props)\n        this.state = {\n            recipes : []\n        }\n        this.deleteRecipeClicked = this.deleteRecipeClicked.bind(this);\n    }\n\n    //dont call initial api in the constructor\n    //if you do the state doesn't reinitialize until the api is finished \n    componentDidMount() {\n\n        //use the username by using authentication service\n        let username = AuthenticationService.getLoggedInUser()\n        RecipeDataService.retrieveAllRecipes(username)\n            .then(\n                response => {\n                    // console.log(response)\n                    this.setState({recipes : response.data})\n                }\n            )\n    }\n\n    deleteRecipeClicked(id) {\n        let username = AuthenticationService.getLoggedInUser()\n        // console.log(id + \" \" + username)\n        RecipeDataService.deleteRecipe(username, id)\n    }\n    render() {\n        return  (   \n                     <div>\n                        <h1>List of Recipes</h1>\n                        <div className=\"container\">\n                            <table className=\"table\">\n                                <thead>\n                                    <tr>\n                                        <th>Name</th>\n                                        <th>Directions</th>\n                                        <th>Ingredients</th>\n                                        <th>Delete</th>\n\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {\n                                        this.state.recipes.map (\n                                            recipe =>\n\n                                        \n                                            <tr key={recipe.id}>\n                                                <td>{recipe.name}</td>\n                                                <td>{recipe.directions}</td>\n                                                <td>{recipe.ingredients}</td>\n                                                <td><button className=\"btn btn-warning\" onClick={() => this.deleteRecipeClicked(recipe.id)} >Delete</button></td>\n                                            \n                                            </tr>\n                                        )\n                                    }\n\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                )\n    }\n}\n\nexport default ListRecipesComponent"]},"metadata":{},"sourceType":"module"}