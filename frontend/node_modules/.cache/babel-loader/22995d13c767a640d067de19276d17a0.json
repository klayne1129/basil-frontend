{"ast":null,"code":"var _jsxFileName = \"/Users/KatieLayne/Documents/basil-app/basil-app/src/components/todo/ToDoApp.jsx\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nclass ToDoApp extends Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: \"ToDoApp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7\n      },\n      __self: this\n    }, React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, React.createElement(React.Fragment, null, React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      component: LoginComponent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/login\",\n      component: LoginComponent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/welcome\",\n      component: WelcomeComponent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nclass ErrorComponent extends Component {\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"An Error has occured. Page not found.\");\n  }\n\n}\n\nclass WelcomeComponent extends Component {\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"Welcome Page\");\n  }\n\n}\n\nclass LoginComponent extends Component {\n  constructor(props) {\n    super(props); // added state to component\n\n    this.state = {\n      username: 'username',\n      password: '',\n      hasLoginFailed: false,\n      showSuccessMessage: false\n    }; //bind methods\n\n    this.handleChange = this.handleChange.bind(this);\n    this.loginClicked = this.loginClicked.bind(this);\n  } //whenever there is a change in a text element an event will handle it\n  //event updates the state \n\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  loginClicked() {\n    //username: user, password: user\n    //hardcoded for now change later\n    if (this.state.username === 'user' && this.state.password === 'user') {\n      // console.log('success!')\n      // this.setState({showSuccessMessage:true})\n      // this.setState({hasLoginFailed:false})\n      this.props.history.push(\"/welcome\");\n    } else {\n      // console.log('failed')\n      this.setState({\n        showSuccessMessage: false\n      });\n      this.setState({\n        hasLoginFailed: true\n      });\n    } // console.log(this.state)\n\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, this.state.hasLoginFailed && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Invalid Credentials\"), this.state.showSuccessMessage && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Login Successful\"), \"Username: \", React.createElement(\"input\", {\n      type: \"text\",\n      name: \"username\",\n      value: this.state.username,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), \"Password: \", React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      value: this.state.password,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: this.loginClicked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Login\"));\n  }\n\n} // function ShowInvalidCredentials(props){\n//         if(props.hasLoginFailed) {\n//             return <div>Invalid Credentials</div>\n//         }\n//         return null\n// }\n// function ShowLoginSuccessMessage(props){\n//     if(props.showSuccessMessage){\n//         return <div>Login Successful</div>\n//     }\n//     return null\n// }\n\n\nexport default ToDoApp;","map":{"version":3,"sources":["/Users/KatieLayne/Documents/basil-app/basil-app/src/components/todo/ToDoApp.jsx"],"names":["React","Component","BrowserRouter","Router","Route","ToDoApp","render","LoginComponent","WelcomeComponent","ErrorComponent","constructor","props","state","username","password","hasLoginFailed","showSuccessMessage","handleChange","bind","loginClicked","event","setState","target","name","value","history","push"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\n\nclass ToDoApp extends Component {\n    render() {\n        return (\n            <div className=\"ToDoApp\">\n\n                {/* allows you to type in browser to route to specific pages */}\n                <Router>\n                    <>\n                    <Route path=\"/\" exact component={LoginComponent}/>\n                    <Route path=\"/login\" component={LoginComponent}/>\n                    <Route path=\"/welcome\" component={WelcomeComponent}/>\n                    </>\n                </Router>\n                {/* <LoginComponent/>\n                <WelcomeComponent/> */}\n            </div>\n            \n        )\n    }\n}\n class ErrorComponent extends Component {\n    render() {\n        return  <div>An Error has occured. Page not found.</div>\n    }\n }\n\nclass WelcomeComponent extends Component {\n    render() {\n        return  <div>Welcome Page</div>\n    }\n}\n\n\nclass LoginComponent extends Component {\n    constructor(props) {\n        super(props)\n        // added state to component\n        this.state = {\n            username: 'username',\n            password: '',\n            hasLoginFailed: false,\n            showSuccessMessage: false\n        \n        }\n        //bind methods\n        this.handleChange = this.handleChange.bind(this)\n        this.loginClicked = this.loginClicked.bind(this)\n        \n        \n\n        }\n        //whenever there is a change in a text element an event will handle it\n        //event updates the state \n        handleChange(event) {\n            this.setState(\n                {\n                    [event.target.name]\n                        :event.target.value\n                }\n            )\n        }\n    \n        loginClicked(){\n            //username: user, password: user\n            //hardcoded for now change later\n            if(this.state.username=== 'user' && this.state.password=== 'user'){\n                // console.log('success!')\n                // this.setState({showSuccessMessage:true})\n                // this.setState({hasLoginFailed:false})\n                this.props.history.push(\"/welcome\")\n            } else {\n                // console.log('failed')\n                this.setState({showSuccessMessage:false})\n                this.setState({hasLoginFailed:true})\n            }\n            // console.log(this.state)\n        }\n\n\n    render() {\n        return (\n            <div>\n                {/* give userfeedback based on credentials */}\n                {/* if true show message */}\n                {this.state.hasLoginFailed && <div>Invalid Credentials</div>}\n                {this.state.showSuccessMessage && <div>Login Successful</div>}\n            \n                {/* //value of buttons are tied back to the value of this state */}\n                Username: <input type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange}/>\n\n                Password: <input type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange}/>\n                <button type=\"submit\"onClick={this.loginClicked}>Login</button>\n            </div>\n        )\n    }\n\n    \n}\n\n// function ShowInvalidCredentials(props){\n//         if(props.hasLoginFailed) {\n//             return <div>Invalid Credentials</div>\n//         }\n//         return null\n// }\n\n// function ShowLoginSuccessMessage(props){\n//     if(props.showSuccessMessage){\n//         return <div>Login Successful</div>\n//     }\n//     return null\n// }\n\nexport default ToDoApp\n\n\n"]},"metadata":{},"sourceType":"module"}