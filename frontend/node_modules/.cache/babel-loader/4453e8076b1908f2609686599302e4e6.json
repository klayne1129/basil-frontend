{"ast":null,"code":"var _jsxFileName = \"/Users/KatieLayne/Documents/basil-app/basil-app/src/components/recipes/RegisterComponent.jsx\";\nimport React, { Component } from 'react';\nimport UserDataService from '../../api/recipes/UserDataService.js';\nimport AuthenticationService from './AuthenticationService.js';\n\nclass RegisterComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: '',\n      verifyPassword: '',\n      role: \"ROLE_USER\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.signUpClicked = this.signUpClicked.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  signUpClicked(values) {\n    console.log(\"signUp clicked\");\n    let user = {\n      username: values.username,\n      password: values.password,\n      role: \"ROLE_USER\"\n    }; // using my default user to authorize any new user\n\n    AuthenticationService.executeJWTAuthenticationService(\"basil\", \"admin\").then(response => {\n      AuthenticationService.registerSuccessfulLoginForJwt(this.state.username, response.data.token);\n      UserDataService.createUser(user);\n      this.props.history.push(`/login}`);\n    });\n  } // signUpClicked(values) {\n  //     console.log(\"signUp clicked\");\n  //     let user = {\n  //         username: values.username,\n  //         password: values.password,\n  //         role: values.role,\n  //     }\n  //     UserDataService.createUser(user)\n  //             this.props.history.push(`/login}`)\n  // }\n\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Registration\"), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Username: \", React.createElement(\"input\", {\n      type: \"text\",\n      name: \"username\",\n      value: this.state.username,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), \"Password: \", React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      value: this.state.password,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), \"Verify Password: \", React.createElement(\"input\", {\n      type: \"password\",\n      name: \"verifyPassword\",\n      value: this.state.verifyPassword,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-success\",\n      onClick: this.signUpClicked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Sign Up\")));\n  }\n\n}\n\nexport default RegisterComponent;","map":{"version":3,"sources":["/Users/KatieLayne/Documents/basil-app/basil-app/src/components/recipes/RegisterComponent.jsx"],"names":["React","Component","UserDataService","AuthenticationService","RegisterComponent","constructor","props","state","username","password","verifyPassword","role","handleChange","bind","signUpClicked","event","setState","target","name","value","values","console","log","user","executeJWTAuthenticationService","then","response","registerSuccessfulLoginForJwt","data","token","createUser","history","push","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport UserDataService from '../../api/recipes/UserDataService.js'\nimport AuthenticationService from './AuthenticationService.js'\n\n\n\nclass RegisterComponent extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            username: '',\n            password: '',\n            verifyPassword: '',\n            role: \"ROLE_USER\"\n           \n        }\n        this.handleChange = this.handleChange.bind(this)\n        this.signUpClicked = this.signUpClicked.bind(this)\n     \n    }\n\n\n    handleChange(event) {\n        this.setState(\n            {\n                [event.target.name]\n                    : event.target.value\n            }\n        )\n    }\n\n    signUpClicked(values) {\n        console.log(\"signUp clicked\");\n        let user = {\n            username: values.username,\n            password: values.password,\n            role: \"ROLE_USER\"\n\n        }\n        // using my default user to authorize any new user\n        AuthenticationService\n            .executeJWTAuthenticationService(\"basil\",\"admin\")\n            .then((response) => {\n                AuthenticationService.registerSuccessfulLoginForJwt(this.state.username, response.data.token)\n                UserDataService.createUser(user)\n                this.props.history.push(`/login}`)\n            })\n    }\n\n    // signUpClicked(values) {\n    //     console.log(\"signUp clicked\");\n    //     let user = {\n    //         username: values.username,\n    //         password: values.password,\n    //         role: values.role,\n\n    //     }\n    //     UserDataService.createUser(user)\n    //             this.props.history.push(`/login}`)\n    // }\n\n\n\n    render() {\n        return (\n            <div >\n                <h1>Registration</h1>\n\n                <div className=\"container\">\n\n\n\n                    {/* //value of buttons are tied back to the value of this state */}\n                    Username: <input type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange} />\n\n                    Password: <input type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\n                    Verify Password: <input type=\"password\" name=\"verifyPassword\" value={this.state.verifyPassword} onChange={this.handleChange} />\n                    <button type='submit' className=\"btn btn-success\" onClick={this.signUpClicked}>Sign Up</button>\n\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default RegisterComponent"]},"metadata":{},"sourceType":"module"}