{"ast":null,"code":"var _jsxFileName = \"/Users/KatieLayne/Documents/basil-app/basil-app/src/components/recipes/WelcomeComponent.jsx\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport logo from \"../../images/logo2.png\";\n\nclass WelcomeComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.handleSuccessfulResponse = this.handleSuccessfulResponse.bind(this);\n    this.handleError = this.handleError.bind(this);\n    this.state = {\n      welcomeMessage: '',\n      errorMessage: ''\n    };\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      class: \"mySlides\",\n      alt: \"meaningful text\",\n      src: \"img_la.jpg\",\n      width: \"100%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      class: \"mySlides\",\n      src: \"img_ny.jpg\",\n      alt: \"meaningful text\",\n      width: \"100%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      class: \"mySlides\",\n      src: \"img_chicago.jpg\",\n      alt: \"meaningful text\",\n      width: \"100%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      src: logo,\n      width: \"300\",\n      alt: \"github.com/klayne1129\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Welcome to Basil!\"), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"Welcome \", this.props.match.params.name, \". You can manage your recipes \", React.createElement(Link, {\n      to: \"/recipes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"here\"), \".\"), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, this.state.welcomeMessage), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, this.state.errorMessage));\n  } // call the promise method. Once called THEN define what should be done with a\n  // successful response\n  // retrieveWelcomeMessage() {\n  //     // HelloWorldService.executeHelloWorldService()\n  //     // .then( response => this.handleSuccessfulResponse(response) )\n  //     // HelloWorldService.executeHelloWorldBeanService()\n  //     // .then( response => this.handleSuccessfulResponse(response) )\n  //     HelloWorldService.executeHelloWorldPathVariableService(this.props.match.params.name)\n  //     .then( response => this.handleSuccessfulResponse(response) )\n  //     .catch( error => this.handleError(error))\n  // }\n\n\n  handleSuccessfulResponse(response) {\n    this.setState({\n      welcomeMessage: response.data.message\n    });\n  } // First checks if there is an error message\n  // if there is an error message, it appends it\n  // then it checks if there is something in the response data (not null)\n  // if there is a response you append it to the error message.\n  // prevents from crashing if you have an error that has no response \n  // (network error, authorization issues)\n\n\n  handleError(error) {\n    console.log(error.response);\n    let errorMessage = '';\n\n    if (errorMessage) {\n      errorMessage += error.message;\n    }\n\n    if (error.response && error.response.data) {\n      errorMessage += error.response.data.message;\n    }\n\n    this.setState({\n      errorMessage: errorMessage\n    });\n  }\n\n}\n\nexport default WelcomeComponent;","map":{"version":3,"sources":["/Users/KatieLayne/Documents/basil-app/basil-app/src/components/recipes/WelcomeComponent.jsx"],"names":["React","Component","Link","logo","WelcomeComponent","constructor","props","handleSuccessfulResponse","bind","handleError","state","welcomeMessage","errorMessage","render","match","params","name","response","setState","data","message","error","console","log"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport logo from \"../../images/logo2.png\"\n\n\n\n\nclass WelcomeComponent extends Component {\n\n    constructor(props) {\n        super(props)\n        this.handleSuccessfulResponse = this.handleSuccessfulResponse.bind(this)\n        this.handleError = this.handleError.bind(this)\n        this.state = {\n            welcomeMessage: '',\n            errorMessage: ''\n\n        }\n    }\n    render() {\n        return (\n        \n            <>\n                <div>\n                <section>\n                <img class=\"mySlides\" alt= 'meaningful text' src=\"img_la.jpg\" width=\"100%\"/>\n                <img class=\"mySlides\" src=\"img_ny.jpg\" alt= 'meaningful text' width=\"100%\" />\n                <img class=\"mySlides\" src=\"img_chicago.jpg\" alt= 'meaningful text' width=\"100%\" />\n            </section>\n                </div>\n                <br></br>\n                <img src={logo} width=\"300\" alt=\"github.com/klayne1129\" />\n                <br></br>\n                <h1>Welcome to Basil!</h1>\n                <div className=\"container\">\n                    Welcome {this.props.match.params.name}.\n                            You can manage your recipes <Link to=\"/recipes\">here</Link>.\n                        </div>\n\n                <div className=\"container\">\n                    {this.state.welcomeMessage}\n                </div>\n                {/* errors */}\n                <div className=\"container\">\n                    {this.state.errorMessage}\n                </div>\n\n            </>\n\n        )\n    }\n\n    // call the promise method. Once called THEN define what should be done with a\n    // successful response\n    // retrieveWelcomeMessage() {\n    //     // HelloWorldService.executeHelloWorldService()\n    //     // .then( response => this.handleSuccessfulResponse(response) )\n\n    //     // HelloWorldService.executeHelloWorldBeanService()\n    //     // .then( response => this.handleSuccessfulResponse(response) )\n\n    //     HelloWorldService.executeHelloWorldPathVariableService(this.props.match.params.name)\n    //     .then( response => this.handleSuccessfulResponse(response) )\n    //     .catch( error => this.handleError(error))\n    // }\n\n    handleSuccessfulResponse(response) {\n        this.setState({ welcomeMessage: response.data.message })\n    }\n\n    // First checks if there is an error message\n    // if there is an error message, it appends it\n    // then it checks if there is something in the response data (not null)\n    // if there is a response you append it to the error message.\n    // prevents from crashing if you have an error that has no response \n    // (network error, authorization issues)\n\n    handleError(error) {\n        console.log(error.response)\n        let errorMessage = '';\n        if (errorMessage) {\n            errorMessage += error.message\n        }\n\n        if (error.response && error.response.data) {\n            errorMessage += error.response.data.message\n        }\n        this.setState({ errorMessage: errorMessage })\n    }\n\n}\n\n\nexport default WelcomeComponent"]},"metadata":{},"sourceType":"module"}