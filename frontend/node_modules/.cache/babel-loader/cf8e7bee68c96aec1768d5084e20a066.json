{"ast":null,"code":"// import React, {Component} from 'react'\n// import {BrowserRouter as Router, Route, Switch, Link} from 'react-router-dom'\n// import { removeTypeDuplicates } from '@babel/types'\n// class ToDoApp extends Component {\n//     render() {\n//         return (\n//             <div className=\"ToDoApp\">\n//                 {/* allows you to type in browser to route to specific pages */}\n//                 <Router>\n//                     <>\n//                         <HeaderComponent/>\n//                         {/* switch makes sure only one route is active at a time */}\n//                         <Switch>\n//                             <Route path=\"/\" exact component={LoginComponent}/>\n//                             <Route path=\"/login\" component={LoginComponent}/>\n//                             <Route path=\"/welcome/:name\" component={WelcomeComponent}/>\n//                             <Route path=\"/todos\" component={ListTodosComponent}/>\n//                             <Route component={ErrorComponent}/>\n//                         </Switch>\n//                         <FooterComponent/>\n//                     </>\n//                 </Router>\n//                 {/* <LoginComponent/>\n//                 <WelcomeComponent/> */}\n//             </div>\n//         )\n//     }\n// }\n// //the nav bar basic code\n// class HeaderComponent extends Component {\n//     render() {\n//         return (\n//             <header>\n//                 <nav className=\"navbar navbar-expand-md navbar-dark bg-dark\">\n//                     <div className=\"navbar-brand\">\n//                         <ul className=\"navbar-nav\">\n//                             <li><Link to=\"/welcome/Basil\" className=\"nav-link\">Basil</Link></li>\n//                         </ul>\n//                         </div>\n//                     <ul className=\"navbar-nav\"> \n//                         <li><Link to=\"/welcome/Basil\" className=\"nav-link\">Home</Link></li>\n//                         <li><Link to=\"/todos\" className=\"nav-link\">Todos</Link></li>\n//                     </ul>\n//                     <ul className=\"navbar-nav navbar-collapse justify-content-end\">\n//                         <li><Link to=\"/login\" className=\"nav-link\">Login</Link></li>\n//                         <li><Link to=\"/logout\" className=\"nav-link\">Logout</Link></li>\n//                     </ul>\n//                 </nav>\n//             </header>\n//         )\n//     }\n// }\n// class FooterComponent extends Component {\n//     render() {\n//         return (\n//             <div>\n//                 <hr/>Footer\n//             </div>\n//         )\n//     }\n// }\n// class ListTodosComponent extends Component{\n//     // hardcoding some table information for learning. Will replace\n//     constructor(props){\n//         super(props)\n//         this.state = {\n//             todos : [\n//                     {id:1, description: \"Leaarn React\", done:false, targetDate:new Date()}, \n//                     {id:2, description: \"Learn SpringBoot Security\", done:false, targetDate:new Date()},\n//                     {id:3, description: \"Connect React to SpringBoot\", done:false, targetDate:new Date()}\n//                 ]\n//         }\n//     }\n//     render() {\n//         return  (   \n//                      <div>\n//                         <h1>List Todos</h1>\n//                         <table>\n//                             <thead>\n//                                 <tr>\n//                                     <th>Id</th>\n//                                     <th>Description</th>\n//                                     <th>Completed</th>\n//                                     <th>Target Date</th>\n//                                 </tr>\n//                             </thead>\n//                             <tbody>\n//                                 {\n//                                     this.state.todos.map (\n//                                         todo =>\n//                                         <tr>\n//                                             <td>{todo.id}</td>\n//                                             <td>{todo.description}</td>\n//                                             <td>{todo.done.toString()}</td>\n//                                             <td>{todo.targetDate.toString()}</td>\n//                                         </tr>\n//                                     )\n//                                 }\n//                             </tbody>\n//                         </table>\n//                     </div>\n//                 )\n//     }\n// }\n// class ErrorComponent extends Component {\n//     render() {\n//         return  <div>An Error has occured. Page not found.</div>\n//     }\n//  }\n// class WelcomeComponent extends Component {\n//     render() {\n//         return  <div>\n//                     Welcome {this.props.match.params.name}. You can manage your Todos <Link to=\"/todos\">here</Link>.\n//                 </div>\n//     }\n// }\n// class LoginComponent extends Component {\n//     constructor(props) {\n//         super(props)\n//         // added state to component\n//         this.state = {\n//             username: 'user',\n//             password: '',\n//             hasLoginFailed: false,\n//             showSuccessMessage: false\n//         }\n//         //bind methods\n//         this.handleChange = this.handleChange.bind(this)\n//         this.loginClicked = this.loginClicked.bind(this)\n//         }\n//         //whenever there is a change in a text element an event will handle it\n//         //event updates the state \n//         handleChange(event) {\n//             this.setState(\n//                 {\n//                     [event.target.name]\n//                         :event.target.value\n//                 }\n//             )\n//         }\n//         loginClicked(){\n//             //username: user, password: user\n//             //hardcoded for now change later\n//             if(this.state.username=== 'user' && this.state.password=== 'user'){\n//                 // console.log('success!')\n//                 // this.setState({showSuccessMessage:true})\n//                 // this.setState({hasLoginFailed:false})\n//                 this.props.history.push(`/welcome/${this.state.username}`)\n//             } else {\n//                 // console.log('failed')\n//                 this.setState({showSuccessMessage:false})\n//                 this.setState({hasLoginFailed:true})\n//             }\n//             // console.log(this.state)\n//         }\n//     render() {\n//         return (\n//             <div>\n//                 {/* give userfeedback based on credentials */}\n//                 {/* if true show message */}\n//                 {this.state.hasLoginFailed && <div>Invalid Credentials</div>}\n//                 {this.state.showSuccessMessage && <div>Login Successful</div>}\n//                 {/* //value of buttons are tied back to the value of this state */}\n//                 Username: <input type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange}/>\n//                 Password: <input type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange}/>\n//                 <button type=\"submit\"onClick={this.loginClicked}>Login</button>\n//             </div>\n//         )\n//     }\n// }\n// // function ShowInvalidCredentials(props){\n// //         if(props.hasLoginFailed) {\n// //             return <div>Invalid Credentials</div>\n// //         }\n// //         return null\n// // }\n// // function ShowLoginSuccessMessage(props){\n// //     if(props.showSuccessMessage){\n// //         return <div>Login Successful</div>\n// //     }\n// //     return null\n// // }\n// export default ToDoApp","map":{"version":3,"sources":["/Users/KatieLayne/Documents/basil-app/basil-app/src/components/todo/ToDoApp.jsx"],"names":[],"mappingssourcesContent":["// import React, {Component} from 'react'\n// import {BrowserRouter as Router, Route, Switch, Link} from 'react-router-dom'\n// import { removeTypeDuplicates } from '@babel/types'\n\n// class ToDoApp extends Component {\n//     render() {\n//         return (\n//             <div className=\"ToDoApp\">\n\n//                 {/* allows you to type in browser to route to specific pages */}\n//                 <Router>\n//                     <>\n//                         <HeaderComponent/>\n//                         {/* switch makes sure only one route is active at a time */}\n//                         <Switch>\n//                             <Route path=\"/\" exact component={LoginComponent}/>\n//                             <Route path=\"/login\" component={LoginComponent}/>\n//                             <Route path=\"/welcome/:name\" component={WelcomeComponent}/>\n//                             <Route path=\"/todos\" component={ListTodosComponent}/>\n//                             <Route component={ErrorComponent}/>\n//                         </Switch>\n//                         <FooterComponent/>\n//                     </>\n//                 </Router>\n//                 {/* <LoginComponent/>\n//                 <WelcomeComponent/> */}\n//             </div>\n            \n//         )\n//     }\n// }\n\n// //the nav bar basic code\n// class HeaderComponent extends Component {\n//     render() {\n//         return (\n//             <header>\n//                 <nav className=\"navbar navbar-expand-md navbar-dark bg-dark\">\n//                     <div className=\"navbar-brand\">\n//                         <ul className=\"navbar-nav\">\n//                             <li><Link to=\"/welcome/Basil\" className=\"nav-link\">Basil</Link></li>\n//                         </ul>\n//                         </div>\n//                     <ul className=\"navbar-nav\"> \n//                         <li><Link to=\"/welcome/Basil\" className=\"nav-link\">Home</Link></li>\n//                         <li><Link to=\"/todos\" className=\"nav-link\">Todos</Link></li>\n//                     </ul>\n//                     <ul className=\"navbar-nav navbar-collapse justify-content-end\">\n//                         <li><Link to=\"/login\" className=\"nav-link\">Login</Link></li>\n//                         <li><Link to=\"/logout\" className=\"nav-link\">Logout</Link></li>\n//                     </ul>\n//                 </nav>\n//             </header>\n//         )\n//     }\n// }\n\n// class FooterComponent extends Component {\n//     render() {\n//         return (\n//             <div>\n//                 <hr/>Footer\n//             </div>\n//         )\n//     }\n// }\n\n// class ListTodosComponent extends Component{\n//     // hardcoding some table information for learning. Will replace\n//     constructor(props){\n//         super(props)\n//         this.state = {\n//             todos : [\n//                     {id:1, description: \"Leaarn React\", done:false, targetDate:new Date()}, \n//                     {id:2, description: \"Learn SpringBoot Security\", done:false, targetDate:new Date()},\n//                     {id:3, description: \"Connect React to SpringBoot\", done:false, targetDate:new Date()}\n//                 ]\n//         }\n//     }\n//     render() {\n//         return  (   \n//                      <div>\n//                         <h1>List Todos</h1>\n//                         <table>\n//                             <thead>\n//                                 <tr>\n//                                     <th>Id</th>\n//                                     <th>Description</th>\n//                                     <th>Completed</th>\n//                                     <th>Target Date</th>\n//                                 </tr>\n//                             </thead>\n//                             <tbody>\n//                                 {\n//                                     this.state.todos.map (\n//                                         todo =>\n\n                                    \n//                                         <tr>\n//                                             <td>{todo.id}</td>\n//                                             <td>{todo.description}</td>\n//                                             <td>{todo.done.toString()}</td>\n//                                             <td>{todo.targetDate.toString()}</td>\n//                                         </tr>\n//                                     )\n//                                 }\n\n//                             </tbody>\n//                         </table>\n//                     </div>\n//                 )\n//     }\n// }\n\n// class ErrorComponent extends Component {\n//     render() {\n//         return  <div>An Error has occured. Page not found.</div>\n//     }\n//  }\n\n// class WelcomeComponent extends Component {\n//     render() {\n//         return  <div>\n//                     Welcome {this.props.match.params.name}. You can manage your Todos <Link to=\"/todos\">here</Link>.\n//                 </div>\n//     }\n// }\n\n\n// class LoginComponent extends Component {\n//     constructor(props) {\n//         super(props)\n//         // added state to component\n//         this.state = {\n//             username: 'user',\n//             password: '',\n//             hasLoginFailed: false,\n//             showSuccessMessage: false\n        \n//         }\n//         //bind methods\n//         this.handleChange = this.handleChange.bind(this)\n//         this.loginClicked = this.loginClicked.bind(this)\n        \n        \n\n//         }\n//         //whenever there is a change in a text element an event will handle it\n//         //event updates the state \n//         handleChange(event) {\n//             this.setState(\n//                 {\n//                     [event.target.name]\n//                         :event.target.value\n//                 }\n//             )\n//         }\n    \n//         loginClicked(){\n//             //username: user, password: user\n//             //hardcoded for now change later\n//             if(this.state.username=== 'user' && this.state.password=== 'user'){\n//                 // console.log('success!')\n//                 // this.setState({showSuccessMessage:true})\n//                 // this.setState({hasLoginFailed:false})\n//                 this.props.history.push(`/welcome/${this.state.username}`)\n//             } else {\n//                 // console.log('failed')\n//                 this.setState({showSuccessMessage:false})\n//                 this.setState({hasLoginFailed:true})\n//             }\n//             // console.log(this.state)\n//         }\n\n\n//     render() {\n//         return (\n//             <div>\n//                 {/* give userfeedback based on credentials */}\n//                 {/* if true show message */}\n//                 {this.state.hasLoginFailed && <div>Invalid Credentials</div>}\n//                 {this.state.showSuccessMessage && <div>Login Successful</div>}\n            \n//                 {/* //value of buttons are tied back to the value of this state */}\n//                 Username: <input type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange}/>\n\n//                 Password: <input type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange}/>\n//                 <button type=\"submit\"onClick={this.loginClicked}>Login</button>\n//             </div>\n//         )\n//     }\n\n    \n// }\n\n// // function ShowInvalidCredentials(props){\n// //         if(props.hasLoginFailed) {\n// //             return <div>Invalid Credentials</div>\n// //         }\n// //         return null\n// // }\n\n// // function ShowLoginSuccessMessage(props){\n// //     if(props.showSuccessMessage){\n// //         return <div>Login Successful</div>\n// //     }\n// //     return null\n// // }\n\n// export default ToDoApp\n\n\n"]},"metadata":{},"sourceType":"module"}