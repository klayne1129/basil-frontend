{"ast":null,"code":"var _jsxFileName = \"/Users/KatieLayne/Documents/basil-app/basil-app/src/components/recipes/RegisterComponent.jsx\";\nimport React, { Component } from 'react';\nimport UserDataService from '../../api/recipes/UserDataService.js';\nimport AuthenticationService from './AuthenticationService.js';\n\nclass RegisterComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: '',\n      verifyPassword: '',\n      role: \"ROLE_USER\",\n      message: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.signUpClicked = this.signUpClicked.bind(this);\n    this.handleError = this.handleError.bind(this);\n  }\n\n  handleError(error) {\n    console.log(error.response);\n    this.setState({\n      message: error.response.data.message\n    });\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  signUpClicked(values) {\n    console.log(\"signUp clicked\");\n    let user = {\n      username: values.username,\n      password: values.password,\n      role: values.role\n    }; // using my default user to authorize any new user\n\n    AuthenticationService.executeJWTAuthenticationService(\"basil\", \"admin\").then(response => {\n      AuthenticationService.registerSuccessfulLoginForJwt(this.state.username, response.data.token).catch(error => this.handleError(error));\n      UserDataService.createUser(user);\n      this.props.history.push(`/login}`);\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Registration\"), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Username: \", React.createElement(\"input\", {\n      type: \"text\",\n      name: \"username\",\n      value: this.state.username,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), \"Password: \", React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      value: this.state.password,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), \"Verify Password: \", React.createElement(\"input\", {\n      type: \"password\",\n      name: \"verifyPassword\",\n      value: this.state.verifyPassword,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-success\",\n      onClick: this.signUpClicked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Sign Up\")));\n  }\n\n}\n\nexport default RegisterComponent;","map":{"version":3,"sources":["/Users/KatieLayne/Documents/basil-app/basil-app/src/components/recipes/RegisterComponent.jsx"],"names":["React","Component","UserDataService","AuthenticationService","RegisterComponent","constructor","props","state","username","password","verifyPassword","role","message","handleChange","bind","signUpClicked","handleError","error","console","log","response","setState","data","event","target","name","value","values","user","executeJWTAuthenticationService","then","registerSuccessfulLoginForJwt","token","catch","createUser","history","push","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport UserDataService from '../../api/recipes/UserDataService.js'\nimport AuthenticationService from './AuthenticationService.js'\n\n\n\nclass RegisterComponent extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            username: '',\n            password: '',\n            verifyPassword: '',\n            role: \"ROLE_USER\",\n            message: ''\n        }\n        this.handleChange = this.handleChange.bind(this)\n        this.signUpClicked = this.signUpClicked.bind(this)\n        this.handleError = this.handleError.bind(this)\n    }\n\n\n    handleError(error){\n        console.log(error.response)\n        this.setState({message: error.response.data.message})\n    }\n\n    handleChange(event) {\n        this.setState(\n            {\n                [event.target.name]\n                    : event.target.value\n            }\n        )\n    }\n\n    signUpClicked(values) {\n        console.log(\"signUp clicked\");\n        let user = {\n            username: values.username,\n            password: values.password,\n            role: values.role,\n\n        }\n        // using my default user to authorize any new user\n        AuthenticationService\n            .executeJWTAuthenticationService(\"basil\", \"admin\")\n            .then((response) => {\n                AuthenticationService.registerSuccessfulLoginForJwt(this.state.username, response.data.token)\n                .catch(error => this.handleError(error))\n                UserDataService.createUser(user)\n                \n                this.props.history.push(`/login}`)\n            })\n    }\n\n\n\n    render() {\n        return (\n            <div >\n                <h1>Registration</h1>\n\n                <div className=\"container\">\n\n\n\n                    {/* //value of buttons are tied back to the value of this state */}\n                    Username: <input type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange} />\n\n                    Password: <input type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\n                    Verify Password: <input type=\"password\" name=\"verifyPassword\" value={this.state.verifyPassword} onChange={this.handleChange} />\n                    <button type='submit' className=\"btn btn-success\" onClick={this.signUpClicked}>Sign Up</button>\n\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default RegisterComponent"]},"metadata":{},"sourceType":"module"}