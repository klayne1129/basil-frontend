{"ast":null,"code":"var _jsxFileName = \"/Users/KatieLayne/Documents/basil-app/basil-app/src/components/todo/ToDoApp.jsx\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom';\nimport { removeTypeDuplicates } from '@babel/types';\n\nclass ToDoApp extends Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: \"ToDoApp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    }, React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, React.createElement(React.Fragment, null, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      component: LoginComponent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/login\",\n      component: LoginComponent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/welcome/:name\",\n      component: WelcomeComponent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/todos\",\n      component: ListTodosComponent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }), React.createElement(Route, {\n      component: ErrorComponent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nclass ListTodosComponent extends Component {\n  // hardcoding some table information for learning. Will replace\n  constructor(props) {\n    super(props);\n    this.state = {\n      todos: [{\n        id: 1,\n        description: \"Leaarn React\",\n        done: false,\n        targetDate: new Date()\n      }, {\n        id: 2,\n        description: \"Learn SpringBoot Security\",\n        done: false,\n        targetDate: new Date()\n      }, {\n        id: 3,\n        description: \"Connect React to SpringBoot\",\n        done: false,\n        targetDate: new Date()\n      }]\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"List Todos\"), React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Id\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Description\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, this.state.todos.map(todo => React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, todo.id), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, todo.description))))));\n  }\n\n}\n\nclass ErrorComponent extends Component {\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"An Error has occured. Page not found.\");\n  }\n\n}\n\nclass WelcomeComponent extends Component {\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Welcome \", this.props.match.params.name, \". You can manage your Todos \", React.createElement(Link, {\n      to: \"/todos\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"here\"), \".\");\n  }\n\n}\n\nclass LoginComponent extends Component {\n  constructor(props) {\n    super(props); // added state to component\n\n    this.state = {\n      username: 'user',\n      password: '',\n      hasLoginFailed: false,\n      showSuccessMessage: false\n    }; //bind methods\n\n    this.handleChange = this.handleChange.bind(this);\n    this.loginClicked = this.loginClicked.bind(this);\n  } //whenever there is a change in a text element an event will handle it\n  //event updates the state \n\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  loginClicked() {\n    //username: user, password: user\n    //hardcoded for now change later\n    if (this.state.username === 'user' && this.state.password === 'user') {\n      // console.log('success!')\n      // this.setState({showSuccessMessage:true})\n      // this.setState({hasLoginFailed:false})\n      this.props.history.push(`/welcome/${this.state.username}`);\n    } else {\n      // console.log('failed')\n      this.setState({\n        showSuccessMessage: false\n      });\n      this.setState({\n        hasLoginFailed: true\n      });\n    } // console.log(this.state)\n\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, this.state.hasLoginFailed && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"Invalid Credentials\"), this.state.showSuccessMessage && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"Login Successful\"), \"Username: \", React.createElement(\"input\", {\n      type: \"text\",\n      name: \"username\",\n      value: this.state.username,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }), \"Password: \", React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      value: this.state.password,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: this.loginClicked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"Login\"));\n  }\n\n} // function ShowInvalidCredentials(props){\n//         if(props.hasLoginFailed) {\n//             return <div>Invalid Credentials</div>\n//         }\n//         return null\n// }\n// function ShowLoginSuccessMessage(props){\n//     if(props.showSuccessMessage){\n//         return <div>Login Successful</div>\n//     }\n//     return null\n// }\n\n\nexport default ToDoApp;","map":{"version":3,"sources":["/Users/KatieLayne/Documents/basil-app/basil-app/src/components/todo/ToDoApp.jsx"],"names":["React","Component","BrowserRouter","Router","Route","Switch","Link","removeTypeDuplicates","ToDoApp","render","LoginComponent","WelcomeComponent","ListTodosComponent","ErrorComponent","constructor","props","state","todos","id","description","done","targetDate","Date","map","todo","match","params","name","username","password","hasLoginFailed","showSuccessMessage","handleChange","bind","loginClicked","event","setState","target","value","history","push"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,aAAa,IAAIC,MAAzB,EAAiCC,KAAjC,EAAwCC,MAAxC,EAAgDC,IAAhD,QAA2D,kBAA3D;AACA,SAASC,oBAAT,QAAqC,cAArC;;AAEA,MAAMC,OAAN,SAAsBP,SAAtB,CAAgC;AAC5BQ,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,0CAEI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,GAAZ;AAAgB,MAAA,KAAK,MAArB;AAAsB,MAAA,SAAS,EAAEC,cAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,SAAS,EAAEA,cAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,gBAAZ;AAA6B,MAAA,SAAS,EAAEC,gBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,EAII,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,SAAS,EAAEC,kBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,EAKI,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAEC,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,CAFJ,CADJ,CAHJ,CADJ;AAqBH;;AAvB2B;;AA0BhC,MAAMD,kBAAN,SAAiCX,SAAjC,CAA0C;AACtC;AACAa,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAG,CACA;AAACC,QAAAA,EAAE,EAAC,CAAJ;AAAOC,QAAAA,WAAW,EAAE,cAApB;AAAoCC,QAAAA,IAAI,EAAC,KAAzC;AAAgDC,QAAAA,UAAU,EAAC,IAAIC,IAAJ;AAA3D,OADA,EAEA;AAACJ,QAAAA,EAAE,EAAC,CAAJ;AAAOC,QAAAA,WAAW,EAAE,2BAApB;AAAiDC,QAAAA,IAAI,EAAC,KAAtD;AAA6DC,QAAAA,UAAU,EAAC,IAAIC,IAAJ;AAAxE,OAFA,EAGA;AAACJ,QAAAA,EAAE,EAAC,CAAJ;AAAOC,QAAAA,WAAW,EAAE,6BAApB;AAAmDC,QAAAA,IAAI,EAAC,KAAxD;AAA+DC,QAAAA,UAAU,EAAC,IAAIC,IAAJ;AAA1E,OAHA;AADC,KAAb;AAOH;;AACDb,EAAAA,MAAM,GAAG;AACL,WACa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADH,EAEG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFJ,CADJ,CADJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQ,KAAKO,KAAL,CAAWC,KAAX,CAAiBM,GAAjB,CACIC,IAAI,IAGJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,IAAI,CAACN,EAAV,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKM,IAAI,CAACL,WAAV,CAFJ,CAJJ,CAFR,CAPJ,CAFH,CADb;AA2BH;;AAxCqC;;AA2C1C,MAAMN,cAAN,SAA6BZ,SAA7B,CAAuC;AACnCQ,EAAAA,MAAM,GAAG;AACL,WAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAAR;AACH;;AAHkC;;AAMvC,MAAME,gBAAN,SAA+BV,SAA/B,CAAyC;AACrCQ,EAAAA,MAAM,GAAG;AACL,WAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACa,KAAKM,KAAL,CAAWU,KAAX,CAAiBC,MAAjB,CAAwBC,IADrC,kCACsE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADtE,MAAR;AAGH;;AALoC;;AASzC,MAAMjB,cAAN,SAA6BT,SAA7B,CAAuC;AACnCa,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN,EADe,CAEf;;AACA,SAAKC,KAAL,GAAa;AACTY,MAAAA,QAAQ,EAAE,MADD;AAETC,MAAAA,QAAQ,EAAE,EAFD;AAGTC,MAAAA,cAAc,EAAE,KAHP;AAITC,MAAAA,kBAAkB,EAAE;AAJX,KAAb,CAHe,CAUf;;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AAIC,GAjB8B,CAkB/B;AACA;;;AACAD,EAAAA,YAAY,CAACG,KAAD,EAAQ;AAChB,SAAKC,QAAL,CACI;AACI,OAACD,KAAK,CAACE,MAAN,CAAaV,IAAd,GACKQ,KAAK,CAACE,MAAN,CAAaC;AAFtB,KADJ;AAMH;;AAEDJ,EAAAA,YAAY,GAAE;AACV;AACA;AACA,QAAG,KAAKlB,KAAL,CAAWY,QAAX,KAAuB,MAAvB,IAAiC,KAAKZ,KAAL,CAAWa,QAAX,KAAuB,MAA3D,EAAkE;AAC9D;AACA;AACA;AACA,WAAKd,KAAL,CAAWwB,OAAX,CAAmBC,IAAnB,CAAyB,YAAW,KAAKxB,KAAL,CAAWY,QAAS,EAAxD;AACH,KALD,MAKO;AACH;AACA,WAAKQ,QAAL,CAAc;AAACL,QAAAA,kBAAkB,EAAC;AAApB,OAAd;AACA,WAAKK,QAAL,CAAc;AAACN,QAAAA,cAAc,EAAC;AAAhB,OAAd;AACH,KAZS,CAaV;;AACH;;AAGLrB,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGK,KAAKO,KAAL,CAAWc,cAAX,IAA6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAHlC,EAIK,KAAKd,KAAL,CAAWe,kBAAX,IAAiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAJtC,gBAOc;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,UAAxB;AAAmC,MAAA,KAAK,EAAE,KAAKf,KAAL,CAAWY,QAArD;AAA+D,MAAA,QAAQ,EAAE,KAAKI,YAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPd,gBASc;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,IAAI,EAAC,UAA5B;AAAuC,MAAA,KAAK,EAAE,KAAKhB,KAAL,CAAWa,QAAzD;AAAmE,MAAA,QAAQ,EAAE,KAAKG,YAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATd,EAUI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAqB,MAAA,OAAO,EAAE,KAAKE,YAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAVJ,CADJ;AAcH;;AA7DkC,C,CAkEvC;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAe1B,OAAf","sourcesContent":["import React, {Component} from 'react'\nimport {BrowserRouter as Router, Route, Switch, Link} from 'react-router-dom'\nimport { removeTypeDuplicates } from '@babel/types'\n\nclass ToDoApp extends Component {\n    render() {\n        return (\n            <div className=\"ToDoApp\">\n\n                {/* allows you to type in browser to route to specific pages */}\n                <Router>\n                    <>\n                        {/* switch makes sure only one route is active at a time */}\n                        <Switch>\n                            <Route path=\"/\" exact component={LoginComponent}/>\n                            <Route path=\"/login\" component={LoginComponent}/>\n                            <Route path=\"/welcome/:name\" component={WelcomeComponent}/>\n                            <Route path=\"/todos\" component={ListTodosComponent}/>\n                            <Route component={ErrorComponent}/>\n                        </Switch>\n                    </>\n                </Router>\n                {/* <LoginComponent/>\n                <WelcomeComponent/> */}\n            </div>\n            \n        )\n    }\n}\n\nclass ListTodosComponent extends Component{\n    // hardcoding some table information for learning. Will replace\n    constructor(props){\n        super(props)\n        this.state = {\n            todos : [\n                    {id:1, description: \"Leaarn React\", done:false, targetDate:new Date()}, \n                    {id:2, description: \"Learn SpringBoot Security\", done:false, targetDate:new Date()},\n                    {id:3, description: \"Connect React to SpringBoot\", done:false, targetDate:new Date()}\n                ]\n        }\n    }\n    render() {\n        return  (   \n                     <div>\n                        <h1>List Todos</h1>\n                        <table>\n                            <thead>\n                                <tr>\n                                    <th>Id</th>\n                                    <th>Description</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {\n                                    this.state.todos.map (\n                                        todo =>\n\n                                    \n                                        <tr>\n                                            <td>{todo.id}</td>\n                                            <td>{todo.description}</td>\n                                        </tr>\n                                    )\n                                }\n\n                            </tbody>\n                        </table>\n                    </div>\n                )\n    }\n}\n\nclass ErrorComponent extends Component {\n    render() {\n        return  <div>An Error has occured. Page not found.</div>\n    }\n }\n\nclass WelcomeComponent extends Component {\n    render() {\n        return  <div>\n                    Welcome {this.props.match.params.name}. You can manage your Todos <Link to=\"/todos\">here</Link>.\n                </div>\n    }\n}\n\n\nclass LoginComponent extends Component {\n    constructor(props) {\n        super(props)\n        // added state to component\n        this.state = {\n            username: 'user',\n            password: '',\n            hasLoginFailed: false,\n            showSuccessMessage: false\n        \n        }\n        //bind methods\n        this.handleChange = this.handleChange.bind(this)\n        this.loginClicked = this.loginClicked.bind(this)\n        \n        \n\n        }\n        //whenever there is a change in a text element an event will handle it\n        //event updates the state \n        handleChange(event) {\n            this.setState(\n                {\n                    [event.target.name]\n                        :event.target.value\n                }\n            )\n        }\n    \n        loginClicked(){\n            //username: user, password: user\n            //hardcoded for now change later\n            if(this.state.username=== 'user' && this.state.password=== 'user'){\n                // console.log('success!')\n                // this.setState({showSuccessMessage:true})\n                // this.setState({hasLoginFailed:false})\n                this.props.history.push(`/welcome/${this.state.username}`)\n            } else {\n                // console.log('failed')\n                this.setState({showSuccessMessage:false})\n                this.setState({hasLoginFailed:true})\n            }\n            // console.log(this.state)\n        }\n\n\n    render() {\n        return (\n            <div>\n                {/* give userfeedback based on credentials */}\n                {/* if true show message */}\n                {this.state.hasLoginFailed && <div>Invalid Credentials</div>}\n                {this.state.showSuccessMessage && <div>Login Successful</div>}\n            \n                {/* //value of buttons are tied back to the value of this state */}\n                Username: <input type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange}/>\n\n                Password: <input type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange}/>\n                <button type=\"submit\"onClick={this.loginClicked}>Login</button>\n            </div>\n        )\n    }\n\n    \n}\n\n// function ShowInvalidCredentials(props){\n//         if(props.hasLoginFailed) {\n//             return <div>Invalid Credentials</div>\n//         }\n//         return null\n// }\n\n// function ShowLoginSuccessMessage(props){\n//     if(props.showSuccessMessage){\n//         return <div>Login Successful</div>\n//     }\n//     return null\n// }\n\nexport default ToDoApp\n\n\n"]},"metadata":{},"sourceType":"module"}