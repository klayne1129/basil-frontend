{"ast":null,"code":"import Axios from \"axios\";\nimport { API_URL } from '../..Constants.js';\n\nclass RecipeDataService {\n  //passing name as a parameter and removing the hardcode makes it customizable for users\n  retrieveAllRecipes(name) {\n    // console.log('executed service')\n    //tell promise to get desired url we created in java and eclipse\n    return Axios.get(`${API_URL}/users/${name}/recipes`);\n  }\n\n  retrieveRecipe(name, id) {\n    return Axios.get(`${API_URL}/users/${name}/recipes/${id}`);\n  }\n\n  deleteRecipe(name, id) {\n    // console.log('executed service')\n    //tell promise to get desired url we created in java and eclipse\n    return Axios.delete(`${API_URL}/users/${name}/recipes/${id}`);\n  }\n\n  updateRecipe(name, id, recipe) {\n    // console.log('executed service')\n    //tell promise to get desired url we created in java and eclipse\n    return Axios.put(`${API_URL}/users/${name}/recipes/${id}`, recipe);\n  }\n\n  createRecipe(name, recipe) {\n    // console.log('executed service')\n    //tell promise to get desired url we created in java and eclipse\n    return Axios.post(`${API_URL}/users/${name}/recipes`, recipe);\n  }\n\n}\n\nexport default new RecipeDataService();","map":{"version":3,"sources":["/Users/KatieLayne/Documents/basil-app/basil-app/src/api/recipes/RecipeDataService.js"],"names":["Axios","API_URL","RecipeDataService","retrieveAllRecipes","name","get","retrieveRecipe","id","deleteRecipe","delete","updateRecipe","recipe","put","createRecipe","post"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,mBAAtB;;AAEA,MAAMC,iBAAN,CAAwB;AACpB;AACAC,EAAAA,kBAAkB,CAACC,IAAD,EAAO;AACrB;AACA;AACA,WAAOJ,KAAK,CAACK,GAAN,CAAW,GAAEJ,OAAQ,UAASG,IAAK,UAAnC,CAAP;AACH;;AAEDE,EAAAA,cAAc,CAACF,IAAD,EAAOG,EAAP,EAAW;AAErB,WAAOP,KAAK,CAACK,GAAN,CAAW,GAAEJ,OAAQ,UAASG,IAAK,YAAWG,EAAG,EAAjD,CAAP;AACH;;AAEDC,EAAAA,YAAY,CAACJ,IAAD,EAAOG,EAAP,EAAW;AACnB;AACA;AACA,WAAOP,KAAK,CAACS,MAAN,CAAc,GAAER,OAAQ,UAASG,IAAK,YAAWG,EAAG,EAApD,CAAP;AACH;;AAEDG,EAAAA,YAAY,CAACN,IAAD,EAAOG,EAAP,EAAWI,MAAX,EAAmB;AAC3B;AACA;AACA,WAAOX,KAAK,CAACY,GAAN,CAAW,GAAEX,OAAQ,UAASG,IAAK,YAAWG,EAAG,EAAjD,EAAoDI,MAApD,CAAP;AACH;;AAEDE,EAAAA,YAAY,CAACT,IAAD,EAAOO,MAAP,EAAe;AACvB;AACA;AACA,WAAOX,KAAK,CAACc,IAAN,CAAY,GAAEb,OAAQ,UAASG,IAAK,UAApC,EAA+CO,MAA/C,CAAP;AACH;;AA7BmB;;AAiCxB,eAAe,IAAIT,iBAAJ,EAAf","sourcesContent":["import Axios from \"axios\"\nimport {API_URL} from '../..Constants.js'\n\nclass RecipeDataService {\n    //passing name as a parameter and removing the hardcode makes it customizable for users\n    retrieveAllRecipes(name) {\n        // console.log('executed service')\n        //tell promise to get desired url we created in java and eclipse\n        return Axios.get(`${API_URL}/users/${name}/recipes`)   \n    }\n\n    retrieveRecipe(name, id) {\n        \n        return Axios.get(`${API_URL}/users/${name}/recipes/${id}`)   \n    }\n\n    deleteRecipe(name, id) {\n        // console.log('executed service')\n        //tell promise to get desired url we created in java and eclipse\n        return Axios.delete(`${API_URL}/users/${name}/recipes/${id}`)   \n    }\n\n    updateRecipe(name, id, recipe) {\n        // console.log('executed service')\n        //tell promise to get desired url we created in java and eclipse\n        return Axios.put(`${API_URL}/users/${name}/recipes/${id}`, recipe)   \n    }\n\n    createRecipe(name, recipe) {\n        // console.log('executed service')\n        //tell promise to get desired url we created in java and eclipse\n        return Axios.post(`${API_URL}/users/${name}/recipes`, recipe)   \n    }\n\n}\n\nexport default new RecipeDataService()"]},"metadata":{},"sourceType":"module"}