{"ast":null,"code":"var _jsxFileName = \"/Users/KatieLayne/Documents/basil-app/basil-app/src/components/recipes/LoginComponent.jsx\";\nimport React, { Component } from 'react';\nimport AuthenticationService from './AuthenticationService.js';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\nclass LoginComponent extends Component {\n  constructor(props) {\n    super(props); // added state to component\n\n    this.handleKeyPress = e => {\n      if (e.key === \"Enter\") {\n        AuthenticationService.executeJWTAuthenticationService(this.state.username, this.state.password).then(response => {\n          AuthenticationService.registerSuccessfulLoginForJwt(this.state.username, response.data.token);\n          this.props.history.push(`/welcome/${this.state.username}`);\n        }).catch(() => {\n          this.setState({\n            showSuccessMessage: false\n          });\n          this.setState({\n            hasLoginFailed: true\n          });\n        });\n      }\n    };\n\n    this.state = {\n      username: '',\n      password: '',\n      hasLoginFailed: false,\n      showSuccessMessage: false\n    }; //bind methods\n\n    this.handleChange = this.handleChange.bind(this);\n    this.loginClicked = this.loginClicked.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n  } //whenever there is a change in a text element an event will handle it\n  //event updates the state \n\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  } //Call the JWTAuthenticationService, if succesful response comes back,\n  //register a token for the intercepter so token will be used on,\n  //every subsequent request\n\n\n  loginClicked() {\n    AuthenticationService.executeJWTAuthenticationService(this.state.username, this.state.password).then(response => {\n      AuthenticationService.registerSuccessfulLoginForJwt(this.state.username, response.data.token);\n      this.props.history.push(`/welcome/${this.state.username}`);\n    }).catch(() => {\n      this.setState({\n        showSuccessMessage: false\n      });\n      this.setState({\n        hasLoginFailed: true\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(Container, {\n      component: \"main\",\n      maxWidth: \"xs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(CssBaseline, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      component: \"h1\",\n      variant: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Sign in\"), React.createElement(\"form\", {\n      onChange: this.handleChange,\n      noValidate: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      variant: \"outlined\",\n      margin: \"normal\",\n      required: true,\n      fullWidth: true,\n      id: \"email\",\n      label: \"Email Address\",\n      name: \"email\",\n      autoComplete: \"email\",\n      autoFocus: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      variant: \"outlined\",\n      margin: \"normal\",\n      required: true,\n      fullWidth: true,\n      name: \"password\",\n      label: \"Password\",\n      type: \"password\",\n      id: \"password\",\n      autoComplete: \"current-password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      variant: \"outlined\",\n      margin: \"normal\",\n      required: true,\n      fullWidth: true,\n      name: \"Verifypassword\",\n      label: \"VerifyPassword\",\n      type: \"password\",\n      id: \"password\",\n      autoComplete: \"current-password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), React.createElement(FormControlLabel, {\n      control: React.createElement(Checkbox, {\n        value: \"remember\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }),\n      label: \"Remember me\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"submit\",\n      fullWidth: true,\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.loginClicked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"Sign In\"), React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(Link, {\n      href: \"#\",\n      variant: \"body2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"Forgot password?\")), React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(Link, {\n      href: \"#\",\n      variant: \"body2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"Don't have an account? Sign Up\")))))) // <div >\n    //     <h1>Login</h1>\n    //     <div className=\"container\">\n    //         {/* give userfeedback based on credentials */}\n    //         {/* if true show message */}\n    //         {this.state.hasLoginFailed && <div className=\"alert alert-warning\">Invalid Credentials</div>}\n    //         {this.state.showSuccessMessage && <div>Login Successful</div>}\n    //         Username: <input type=\"text\" name=\"username\" placeholder='' value={this.state.username} onChange={this.handleChange} />\n    //         Password: <input type=\"password\" name=\"password\" placeholder='' value={this.state.password} onChange={this.handleChange} onKeyPress={this.handleKeyPress} />\n    //         <button type='submit' className=\"btn btn-success\" onClick={this.loginClicked}>Login</button>\n    //     </div>\n    // </div>\n    ;\n  }\n\n}\n\nexport default LoginComponent;","map":{"version":3,"sources":["/Users/KatieLayne/Documents/basil-app/basil-app/src/components/recipes/LoginComponent.jsx"],"names":["React","Component","AuthenticationService","Avatar","Button","CssBaseline","TextField","FormControlLabel","Checkbox","Link","Grid","Box","LockOutlinedIcon","Typography","makeStyles","Container","LoginComponent","constructor","props","handleKeyPress","e","key","executeJWTAuthenticationService","state","username","password","then","response","registerSuccessfulLoginForJwt","data","token","history","push","catch","setState","showSuccessMessage","hasLoginFailed","handleChange","bind","loginClicked","event","target","name","value","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport AuthenticationService from './AuthenticationService.js'\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\n\n\n\nclass LoginComponent extends Component {\n    constructor(props) {\n        super(props)\n        // added state to component\n        this.state = {\n            username: '',\n            password: '',\n            hasLoginFailed: false,\n            showSuccessMessage: false\n\n        }\n        //bind methods\n        this.handleChange = this.handleChange.bind(this)\n        this.loginClicked = this.loginClicked.bind(this)\n        this.handleKeyPress = this.handleKeyPress.bind(this)\n\n    }\n    //whenever there is a change in a text element an event will handle it\n    //event updates the state \n    handleChange(event) {\n        this.setState(\n            {\n                [event.target.name]\n                    : event.target.value\n            }\n        )\n    }\n\n    //Call the JWTAuthenticationService, if succesful response comes back,\n    //register a token for the intercepter so token will be used on,\n    //every subsequent request\n    loginClicked() {\n        AuthenticationService\n            .executeJWTAuthenticationService(this.state.username, this.state.password)\n            .then((response) => {\n                AuthenticationService.registerSuccessfulLoginForJwt(this.state.username, response.data.token)\n                this.props.history.push(`/welcome/${this.state.username}`)\n            }).catch(() => {\n                this.setState({ showSuccessMessage: false })\n                this.setState({ hasLoginFailed: true })\n            })\n    }\n\n\n    handleKeyPress = e => {\n        if (e.key === \"Enter\") {\n            AuthenticationService\n                .executeJWTAuthenticationService(this.state.username, this.state.password)\n                .then((response) => {\n                    AuthenticationService.registerSuccessfulLoginForJwt(this.state.username, response.data.token)\n                    this.props.history.push(`/welcome/${this.state.username}`)\n                }).catch(() => {\n                    this.setState({ showSuccessMessage: false })\n                    this.setState({ hasLoginFailed: true })\n                })\n        }\n    }\n\n    render() {\n        return (\n\n\n            <Container component=\"main\" maxWidth=\"xs\">\n                <CssBaseline />\n                <div>\n                    \n                    <Typography component=\"h1\" variant=\"h5\">\n                        Sign in\n        </Typography>\n                    <form onChange={this.handleChange} noValidate>\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"email\"\n                            label=\"Email Address\"\n                            name=\"email\"\n                            autoComplete=\"email\"\n                            autoFocus\n                        />\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            name=\"password\"\n                            label=\"Password\"\n                            type=\"password\"\n                            id=\"password\"\n                            autoComplete=\"current-password\"\n                        />\n\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            name=\"Verifypassword\"\n                            label=\"VerifyPassword\"\n                            type=\"password\"\n                            id=\"password\"\n                            autoComplete=\"current-password\"\n                        />\n                        <FormControlLabel\n                            control={<Checkbox value=\"remember\" color=\"primary\" />}\n                            label=\"Remember me\"\n                        />\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={this.loginClicked}\n                        >\n                            Sign In\n          </Button>\n                        <Grid container>\n                            <Grid item xs>\n                                <Link href=\"#\" variant=\"body2\">\n                                    Forgot password?\n              </Link>\n                            </Grid>\n                            <Grid item>\n                                <Link href=\"#\" variant=\"body2\">\n                                    {\"Don't have an account? Sign Up\"}\n                                </Link>\n                            </Grid>\n                        </Grid>\n                    </form>\n                </div>\n               \n            </Container>\n\n\n            // <div >\n            //     <h1>Login</h1>\n\n            //     <div className=\"container\">\n\n            //         {/* give userfeedback based on credentials */}\n            //         {/* if true show message */}\n            //         {this.state.hasLoginFailed && <div className=\"alert alert-warning\">Invalid Credentials</div>}\n            //         {this.state.showSuccessMessage && <div>Login Successful</div>}\n\n            //         Username: <input type=\"text\" name=\"username\" placeholder='' value={this.state.username} onChange={this.handleChange} />\n\n            //         Password: <input type=\"password\" name=\"password\" placeholder='' value={this.state.password} onChange={this.handleChange} onKeyPress={this.handleKeyPress} />\n\n            //         <button type='submit' className=\"btn btn-success\" onClick={this.loginClicked}>Login</button>\n\n            //     </div>\n            // </div>\n        )\n    }\n}\n\nexport default LoginComponent"]},"metadata":{},"sourceType":"module"}