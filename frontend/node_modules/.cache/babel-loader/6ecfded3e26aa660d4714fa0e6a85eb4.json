{"ast":null,"code":"var _jsxFileName = \"/Users/KatieLayne/Documents/basil-app/basil-app/frontend/src/components/recipes/SearchComponent.jsx\";\nimport React, { Component } from 'react';\nimport AuthenticationService from './AuthenticationService.js';\nimport RecipeDataService from '../../api/recipes/RecipeDataService.js';\nimport { Card, ListGroup, CardColumns, ButtonGroup, ToggleButton, Badge } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport logo from \"../../images/logo2.png\";\n\nconst Recipe = props => React.createElement(Link, {\n  to: '/view/' + props.recipe.id,\n  className: \"link\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}, React.createElement(Card, {\n  className: \"shadow grow\",\n  bg: \"light\",\n  style: {\n    marginTop: 10\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}, React.createElement(Card.Img, {\n  variant: \"top\",\n  src: props.recipe.image,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}), React.createElement(Card.Header, {\n  className: \"h5\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}, props.recipe.title, \" \", React.createElement(Badge, {\n  variant: \"secondary\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}, props.recipe.mealType)), React.createElement(ListGroup, {\n  variant: \"flush\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n})));\n\nclass SearchComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      recipes: [],\n      filterByField: \"all\",\n      filterByTerm: ''\n    };\n    this.refreshRecipes = this.refreshRecipes.bind(this);\n    this.handleFilter = this.handleFilter.bind(this);\n    this.handleTerm = this.handleTerm.bind(this);\n  }\n\n  componentDidMount() {\n    console.log(\"component did Mount\");\n    this.refreshRecipes();\n  }\n\n  refreshRecipes() {\n    let username = AuthenticationService.getLoggedInUser();\n    RecipeDataService.retrieveAllRecipes(username).then(response => {\n      this.setState({\n        recipes: response.data\n      });\n    });\n  } //looks at the state's filterByTerm and filterByField\n  //returns a list of recipes based on params\n\n\n  recipeList() {\n    let filterBy = this.state.filterByField;\n    let searchterm = this.state.filterByTerm.replace(/^\\s+|\\s+$/g, '');\n    return this.state.recipes.map(function (currentRecipe, i) {\n      if (filterBy === 'all' && (currentRecipe.title.toLowerCase().includes(searchterm.toLowerCase()) || currentRecipe.ingredients.toLowerCase().includes(searchterm.toLowerCase()) || currentRecipe.tags.toLowerCase().includes(searchterm.toLowerCase()) || currentRecipe.mealType.toLowerCase().includes(searchterm.toLowerCase())) || filterBy === 'title' && currentRecipe.title.toLowerCase().includes(searchterm.toLowerCase()) || filterBy === 'ingredients' && currentRecipe.ingredients.toLowerCase().includes(searchterm.toLowerCase()) || filterBy === 'tags' && currentRecipe.tags.toLowerCase().includes(searchterm.toLowerCase()) || filterBy === 'mealType' && currentRecipe.mealType.toLowerCase().includes(searchterm.toLowerCase())) return React.createElement(Recipe, {\n        recipe: currentRecipe,\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      });\n    });\n  } //Handles any changes to the search category\n\n\n  handleFilter(e) {\n    this.setState({\n      filterByTerm: '',\n      filterByField: e.target.value\n    });\n  } //Handles any changes to search term\n\n\n  handleTerm(e) {\n    this.setState({\n      filterByTerm: e.target.value\n    });\n  }\n\n  render() {\n    //searchbar variable\n    let searchBar; //if the search field is filtering by recipe mealType, it will set searchBar to a group of radio buttons\n\n    if (this.state.filterByField === 'mealType') {\n      searchBar = React.createElement(\"div\", {\n        className: \"form-group row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(ButtonGroup, {\n        toggle: true,\n        className: \"mt-1 ml-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(ToggleButton, {\n        type: \"radio\",\n        name: \"radio\",\n        value: \"entree\",\n        checked: this.state.filterByTerm === \"entree\",\n        onChange: this.handleTerm,\n        variant: \"dark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"Entrees\"), React.createElement(ToggleButton, {\n        type: \"radio\",\n        name: \"radio\",\n        value: \"dessert\",\n        checked: this.state.filterByTerm === \"dessert\",\n        onChange: this.handleTerm,\n        variant: \"dark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"Desserts\"), React.createElement(ToggleButton, {\n        type: \"radio\",\n        name: \"radio\",\n        value: \"snack\",\n        checked: this.state.filterByTerm === \"snack\",\n        onChange: this.handleTerm,\n        variant: \"dark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"Snacks\"), React.createElement(ToggleButton, {\n        type: \"radio\",\n        name: \"radio\",\n        value: \"drink\",\n        checked: this.state.filterByTerm === \"drink\",\n        onChange: this.handleTerm,\n        variant: \"dark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"Drinks\"), React.createElement(ToggleButton, {\n        type: \"radio\",\n        name: \"radio\",\n        value: \"side\",\n        checked: this.state.filterByTerm === \"side\",\n        onChange: this.handleTerm,\n        variant: \"dark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"Sides\"), React.createElement(ToggleButton, {\n        type: \"radio\",\n        name: \"radio\",\n        value: \"app\",\n        checked: this.state.filterByTerm === \"app\",\n        onChange: this.handleTerm,\n        variant: \"dark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, \"Appetizers\"))); //if search Field is set to anything other than mealType, it sets searchBar to a text input that will live update due to how the onChange attribute works\n    } else {\n      searchBar = React.createElement(\"div\", {\n        className: \"form-group row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-xs-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        placeholder: \"SearchTerm\",\n        value: this.state.filterByTerm,\n        className: \"inputmargin form-control\",\n        type: \"text\",\n        onChange: this.handleTerm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      })));\n    }\n\n    return React.createElement(\"div\", {\n      className: \"container pt-4\",\n      role: \"main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      src: logo,\n      width: \"200\",\n      alt: \"github.com/klayne1129\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, \"Search by:\"), React.createElement(ButtonGroup, {\n      toggle: true,\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(ToggleButton, {\n      type: \"radio\",\n      name: \"radio\",\n      defaultChecked: true,\n      value: \"all\",\n      checked: this.state.filterByField === \"all\",\n      onChange: this.handleFilter,\n      variant: \"dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, \"All\"), React.createElement(ToggleButton, {\n      type: \"radio\",\n      name: \"radio\",\n      defaultChecked: true,\n      value: \"title\",\n      checked: this.state.filterByField === \"title\",\n      onChange: this.handleFilter,\n      variant: \"dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, \"Name\"), React.createElement(ToggleButton, {\n      type: \"radio\",\n      name: \"radio\",\n      defaultChecked: true,\n      value: \"ingredients\",\n      checked: this.state.filterByField === \"ingredients\",\n      onChange: this.handleFilter,\n      variant: \"dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, \"Ingredients\"), React.createElement(ToggleButton, {\n      type: \"radio\",\n      name: \"radio\",\n      defaultChecked: true,\n      value: \"mealType\",\n      checked: this.state.filterByField === \"mealType\",\n      onChange: this.handleFilter,\n      variant: \"dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, \"Meal Type\"), React.createElement(ToggleButton, {\n      type: \"radio\",\n      name: \"radio\",\n      defaultChecked: true,\n      value: \"tags\",\n      checked: this.state.filterByField === \"tags\",\n      onChange: this.handleFilter,\n      variant: \"dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, \"Tags\")), searchBar), React.createElement(CardColumns, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, this.recipeList()));\n  }\n\n}\n\nexport default SearchComponent;","map":{"version":3,"sources":["/Users/KatieLayne/Documents/basil-app/basil-app/frontend/src/components/recipes/SearchComponent.jsx"],"names":["React","Component","AuthenticationService","RecipeDataService","Card","ListGroup","CardColumns","ButtonGroup","ToggleButton","Badge","Link","logo","Recipe","props","recipe","id","marginTop","image","title","mealType","SearchComponent","constructor","state","recipes","filterByField","filterByTerm","refreshRecipes","bind","handleFilter","handleTerm","componentDidMount","console","log","username","getLoggedInUser","retrieveAllRecipes","then","response","setState","data","recipeList","filterBy","searchterm","replace","map","currentRecipe","i","toLowerCase","includes","ingredients","tags","e","target","value","render","searchBar"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,qBAAP,MAAkC,4BAAlC;AACA,OAAOC,iBAAP,MAA8B,wCAA9B;AACA,SAASC,IAAT,EAAeC,SAAf,EAA0BC,WAA1B,EAAuCC,WAAvC,EAAoDC,YAApD,EAAkEC,KAAlE,QAA+E,iBAA/E;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;;AAGA,MAAMC,MAAM,GAAGC,KAAK,IAEhB,oBAAC,IAAD;AAAM,EAAA,EAAE,EAAE,WAAWA,KAAK,CAACC,MAAN,CAAaC,EAAlC;AAAsC,EAAA,SAAS,EAAC,MAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,IAAD;AAAM,EAAA,SAAS,EAAC,aAAhB;AAA8B,EAAA,EAAE,EAAC,OAAjC;AAAyC,EAAA,KAAK,EAAE;AAAEC,IAAAA,SAAS,EAAE;AAAb,GAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAGI,oBAAC,IAAD,CAAM,GAAN;AAAU,EAAA,OAAO,EAAC,KAAlB;AAAwB,EAAA,GAAG,EAAEH,KAAK,CAACC,MAAN,CAAaG,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAHJ,EAKI,oBAAC,IAAD,CAAM,MAAN;AAAa,EAAA,SAAS,EAAC,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA6BJ,KAAK,CAACC,MAAN,CAAaI,KAA1C,OAAiD,oBAAC,KAAD;AAAO,EAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA4BL,KAAK,CAACC,MAAN,CAAaK,QAAzC,CAAjD,CALJ,EAMI,oBAAC,SAAD;AAAW,EAAA,OAAO,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EANJ,CADJ,CAFJ;;AAiBA,MAAMC,eAAN,SAA8BnB,SAA9B,CAAwC;AACpCoB,EAAAA,WAAW,CAACR,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKS,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE,EADA;AAETC,MAAAA,aAAa,EAAE,KAFN;AAGTC,MAAAA,YAAY,EAAE;AAHL,KAAb;AAKA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKE,UAAL,GAAkB,KAAKA,UAAL,CAAgBF,IAAhB,CAAqB,IAArB,CAAlB;AACH;;AAEDG,EAAAA,iBAAiB,GAAG;AAEhBC,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACA,SAAKN,cAAL;AACH;;AAEDA,EAAAA,cAAc,GAAG;AACb,QAAIO,QAAQ,GAAG/B,qBAAqB,CAACgC,eAAtB,EAAf;AACA/B,IAAAA,iBAAiB,CAACgC,kBAAlB,CAAqCF,QAArC,EACKG,IADL,CAEQC,QAAQ,IAAI;AACR,WAAKC,QAAL,CAAc;AAAEf,QAAAA,OAAO,EAAEc,QAAQ,CAACE;AAApB,OAAd;AACH,KAJT;AAMH,GA3BmC,CA6BpC;AACA;;;AAEAC,EAAAA,UAAU,GAAG;AACT,QAAIC,QAAQ,GAAG,KAAKnB,KAAL,CAAWE,aAA1B;AACA,QAAIkB,UAAU,GAAG,KAAKpB,KAAL,CAAWG,YAAX,CAAwBkB,OAAxB,CAAgC,YAAhC,EAA8C,EAA9C,CAAjB;AACA,WAAO,KAAKrB,KAAL,CAAWC,OAAX,CAAmBqB,GAAnB,CAAuB,UAAUC,aAAV,EAAyBC,CAAzB,EAA4B;AAGtD,UAAKL,QAAQ,KAAK,KAAb,KAAuBI,aAAa,CAAC3B,KAAd,CAAoB6B,WAApB,GAAkCC,QAAlC,CAA2CN,UAAU,CAACK,WAAX,EAA3C,KACrBF,aAAa,CAACI,WAAd,CAA0BF,WAA1B,GAAwCC,QAAxC,CAAiDN,UAAU,CAACK,WAAX,EAAjD,CADqB,IAErBF,aAAa,CAACK,IAAd,CAAmBH,WAAnB,GAAiCC,QAAjC,CAA0CN,UAAU,CAACK,WAAX,EAA1C,CAFqB,IAGrBF,aAAa,CAAC1B,QAAd,CAAuB4B,WAAvB,GAAqCC,QAArC,CAA8CN,UAAU,CAACK,WAAX,EAA9C,CAHF,CAAD,IAIIN,QAAQ,KAAK,OAAb,IAAwBI,aAAa,CAAC3B,KAAd,CAAoB6B,WAApB,GAAkCC,QAAlC,CAA2CN,UAAU,CAACK,WAAX,EAA3C,CAJ5B,IAKIN,QAAQ,KAAK,aAAb,IAA8BI,aAAa,CAACI,WAAd,CAA0BF,WAA1B,GAAwCC,QAAxC,CAAiDN,UAAU,CAACK,WAAX,EAAjD,CALlC,IAMIN,QAAQ,KAAK,MAAb,IAAuBI,aAAa,CAACK,IAAd,CAAmBH,WAAnB,GAAiCC,QAAjC,CAA0CN,UAAU,CAACK,WAAX,EAA1C,CAN3B,IAOIN,QAAQ,KAAK,UAAb,IAA2BI,aAAa,CAAC1B,QAAd,CAAuB4B,WAAvB,GAAqCC,QAArC,CAA8CN,UAAU,CAACK,WAAX,EAA9C,CAPnC,EAQI,OAAO,oBAAC,MAAD;AAAQ,QAAA,MAAM,EAAEF,aAAhB;AAA+B,QAAA,GAAG,EAAEC,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACP,KAZM,CAAP;AAaH,GAhDmC,CAiDpC;;;AACAlB,EAAAA,YAAY,CAACuB,CAAD,EAAI;AACZ,SAAKb,QAAL,CAAc;AACVb,MAAAA,YAAY,EAAE,EADJ;AAEVD,MAAAA,aAAa,EAAE2B,CAAC,CAACC,MAAF,CAASC;AAFd,KAAd;AAIH,GAvDmC,CAwDpC;;;AACAxB,EAAAA,UAAU,CAACsB,CAAD,EAAI;AACV,SAAKb,QAAL,CAAc;AACVb,MAAAA,YAAY,EAAE0B,CAAC,CAACC,MAAF,CAASC;AADb,KAAd;AAGH;;AAEDC,EAAAA,MAAM,GAAG;AACL;AACA,QAAIC,SAAJ,CAFK,CAIL;;AACA,QAAI,KAAKjC,KAAL,CAAWE,aAAX,KAA6B,UAAjC,EAA6C;AACzC+B,MAAAA,SAAS,GACL;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgC,oBAAC,WAAD;AAAa,QAAA,MAAM,MAAnB;AAAoB,QAAA,SAAS,EAAC,WAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAE5B,oBAAC,YAAD;AAAc,QAAA,IAAI,EAAC,OAAnB;AACI,QAAA,IAAI,EAAC,OADT;AAEI,QAAA,KAAK,EAAC,QAFV;AAGI,QAAA,OAAO,EAAE,KAAKjC,KAAL,CAAWG,YAAX,KAA4B,QAHzC;AAII,QAAA,QAAQ,EAAE,KAAKI,UAJnB;AAKI,QAAA,OAAO,EAAC,MALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAF4B,EAU5B,oBAAC,YAAD;AAAc,QAAA,IAAI,EAAC,OAAnB;AACI,QAAA,IAAI,EAAC,OADT;AAEI,QAAA,KAAK,EAAC,SAFV;AAGI,QAAA,OAAO,EAAE,KAAKP,KAAL,CAAWG,YAAX,KAA4B,SAHzC;AAII,QAAA,QAAQ,EAAE,KAAKI,UAJnB;AAKI,QAAA,OAAO,EAAC,MALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAV4B,EAkB5B,oBAAC,YAAD;AAAc,QAAA,IAAI,EAAC,OAAnB;AACI,QAAA,IAAI,EAAC,OADT;AAEI,QAAA,KAAK,EAAC,OAFV;AAGI,QAAA,OAAO,EAAE,KAAKP,KAAL,CAAWG,YAAX,KAA4B,OAHzC;AAII,QAAA,QAAQ,EAAE,KAAKI,UAJnB;AAKI,QAAA,OAAO,EAAC,MALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAlB4B,EA0B5B,oBAAC,YAAD;AAAc,QAAA,IAAI,EAAC,OAAnB;AACI,QAAA,IAAI,EAAC,OADT;AAEI,QAAA,KAAK,EAAC,OAFV;AAGI,QAAA,OAAO,EAAE,KAAKP,KAAL,CAAWG,YAAX,KAA4B,OAHzC;AAII,QAAA,QAAQ,EAAE,KAAKI,UAJnB;AAKI,QAAA,OAAO,EAAC,MALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA1B4B,EAkC5B,oBAAC,YAAD;AAAc,QAAA,IAAI,EAAC,OAAnB;AACI,QAAA,IAAI,EAAC,OADT;AAEI,QAAA,KAAK,EAAC,MAFV;AAGI,QAAA,OAAO,EAAE,KAAKP,KAAL,CAAWG,YAAX,KAA4B,MAHzC;AAII,QAAA,QAAQ,EAAE,KAAKI,UAJnB;AAKI,QAAA,OAAO,EAAC,MALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAlC4B,EA0C5B,oBAAC,YAAD;AAAc,QAAA,IAAI,EAAC,OAAnB;AACI,QAAA,IAAI,EAAC,OADT;AAEI,QAAA,KAAK,EAAC,KAFV;AAGI,QAAA,OAAO,EAAE,KAAKP,KAAL,CAAWG,YAAX,KAA4B,KAHzC;AAII,QAAA,QAAQ,EAAE,KAAKI,UAJnB;AAKI,QAAA,OAAO,EAAC,MALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBA1C4B,CAAhC,CADJ,CADyC,CAwDzC;AACH,KAzDD,MAyDO;AACH0B,MAAAA,SAAS,GACL;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,WAAW,EAAC,YAAnB;AACI,QAAA,KAAK,EAAE,KAAKjC,KAAL,CAAWG,YADtB;AAEI,QAAA,SAAS,EAAC,0BAFd;AAGI,QAAA,IAAI,EAAC,MAHT;AAII,QAAA,QAAQ,EAAE,KAAKI,UAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,CADJ;AAWH;;AAED,WAEI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAgC,MAAA,IAAI,EAAC,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAGI;AAAK,MAAA,GAAG,EAAElB,IAAV;AAAgB,MAAA,KAAK,EAAC,KAAtB;AAA4B,MAAA,GAAG,EAAC,uBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,EAMI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEI,oBAAC,WAAD;AAAa,MAAA,MAAM,MAAnB;AAAoB,MAAA,SAAS,EAAC,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAC,OAAnB;AACI,MAAA,IAAI,EAAC,OADT;AAEI,MAAA,cAAc,MAFlB;AAGI,MAAA,KAAK,EAAC,KAHV;AAII,MAAA,OAAO,EAAE,KAAKW,KAAL,CAAWE,aAAX,KAA6B,KAJ1C;AAKI,MAAA,QAAQ,EAAE,KAAKI,YALnB;AAMI,MAAA,OAAO,EAAC,MANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAWI,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAC,OAAnB;AACI,MAAA,IAAI,EAAC,OADT;AAEI,MAAA,cAAc,MAFlB;AAGI,MAAA,KAAK,EAAC,OAHV;AAII,MAAA,OAAO,EAAE,KAAKN,KAAL,CAAWE,aAAX,KAA6B,OAJ1C;AAKI,MAAA,QAAQ,EAAE,KAAKI,YALnB;AAMI,MAAA,OAAO,EAAC,MANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXJ,EAoBI,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAC,OAAnB;AACI,MAAA,IAAI,EAAC,OADT;AAEI,MAAA,cAAc,MAFlB;AAGI,MAAA,KAAK,EAAC,aAHV;AAII,MAAA,OAAO,EAAE,KAAKN,KAAL,CAAWE,aAAX,KAA6B,aAJ1C;AAKI,MAAA,QAAQ,EAAE,KAAKI,YALnB;AAMI,MAAA,OAAO,EAAC,MANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBApBJ,EA6BI,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAC,OAAnB;AACI,MAAA,IAAI,EAAC,OADT;AAEI,MAAA,cAAc,MAFlB;AAGI,MAAA,KAAK,EAAC,UAHV;AAII,MAAA,OAAO,EAAE,KAAKN,KAAL,CAAWE,aAAX,KAA6B,UAJ1C;AAKI,MAAA,QAAQ,EAAE,KAAKI,YALnB;AAMI,MAAA,OAAO,EAAC,MANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBA7BJ,EAsCI,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAC,OAAnB;AACI,MAAA,IAAI,EAAC,OADT;AAEI,MAAA,cAAc,MAFlB;AAGI,MAAA,KAAK,EAAC,MAHV;AAII,MAAA,OAAO,EAAE,KAAKN,KAAL,CAAWE,aAAX,KAA6B,MAJ1C;AAKI,MAAA,QAAQ,EAAE,KAAKI,YALnB;AAMI,MAAA,OAAO,EAAC,MANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAtCJ,CAFJ,EAoDK2B,SApDL,CANJ,EA8DI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAc,KAAKf,UAAL,EAAd,CA9DJ,CAFJ;AAmEH;;AA9MmC;;AAkNxC,eAAepB,eAAf","sourcesContent":["import React, { Component } from 'react'\nimport AuthenticationService from './AuthenticationService.js'\nimport RecipeDataService from '../../api/recipes/RecipeDataService.js'\nimport { Card, ListGroup, CardColumns, ButtonGroup, ToggleButton, Badge } from 'react-bootstrap';\nimport { Link } from 'react-router-dom'\nimport logo from \"../../images/logo2.png\"\n\n\nconst Recipe = props => (\n\n    <Link to={'/view/' + props.recipe.id} className=\"link\">\n        <Card className=\"shadow grow\" bg='light' style={{ marginTop: 10 }} >\n\n\n            <Card.Img variant='top' src={props.recipe.image}></Card.Img>\n\n            <Card.Header className='h5'>{props.recipe.title} <Badge variant='secondary'>{props.recipe.mealType}</Badge></Card.Header>\n            <ListGroup variant=\"flush\" >\n            </ListGroup>\n        </Card>\n    </Link>\n\n\n)\n\nclass SearchComponent extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            recipes: [],\n            filterByField: \"all\",\n            filterByTerm: ''\n        }\n        this.refreshRecipes = this.refreshRecipes.bind(this);\n        this.handleFilter = this.handleFilter.bind(this);\n        this.handleTerm = this.handleTerm.bind(this);\n    }\n\n    componentDidMount() {\n\n        console.log(\"component did Mount\")\n        this.refreshRecipes();\n    }\n\n    refreshRecipes() {\n        let username = AuthenticationService.getLoggedInUser()\n        RecipeDataService.retrieveAllRecipes(username)\n            .then(\n                response => {\n                    this.setState({ recipes: response.data })\n                }\n            )\n    }\n\n    //looks at the state's filterByTerm and filterByField\n    //returns a list of recipes based on params\n\n    recipeList() {\n        let filterBy = this.state.filterByField\n        let searchterm = this.state.filterByTerm.replace(/^\\s+|\\s+$/g, '')\n        return this.state.recipes.map(function (currentRecipe, i) {\n\n\n            if ((filterBy === 'all' && (currentRecipe.title.toLowerCase().includes(searchterm.toLowerCase())\n                || currentRecipe.ingredients.toLowerCase().includes(searchterm.toLowerCase())\n                || currentRecipe.tags.toLowerCase().includes(searchterm.toLowerCase())\n                || currentRecipe.mealType.toLowerCase().includes(searchterm.toLowerCase())))\n                || (filterBy === 'title' && currentRecipe.title.toLowerCase().includes(searchterm.toLowerCase()))\n                || (filterBy === 'ingredients' && currentRecipe.ingredients.toLowerCase().includes(searchterm.toLowerCase()))\n                || (filterBy === 'tags' && currentRecipe.tags.toLowerCase().includes(searchterm.toLowerCase()))\n                || (filterBy === 'mealType' && currentRecipe.mealType.toLowerCase().includes(searchterm.toLowerCase())))\n                return <Recipe recipe={currentRecipe} key={i} />\n        });\n    }\n    //Handles any changes to the search category\n    handleFilter(e) {\n        this.setState({\n            filterByTerm: '',\n            filterByField: e.target.value\n        })\n    }\n    //Handles any changes to search term\n    handleTerm(e) {\n        this.setState({\n            filterByTerm: e.target.value\n        })\n    }\n\n    render() {\n        //searchbar variable\n        let searchBar;\n\n        //if the search field is filtering by recipe mealType, it will set searchBar to a group of radio buttons\n        if (this.state.filterByField === 'mealType') {\n            searchBar =\n                <div className='form-group row'><ButtonGroup toggle className=\"mt-1 ml-3\" >\n\n                    <ToggleButton type=\"radio\"\n                        name=\"radio\"\n                        value=\"entree\"\n                        checked={this.state.filterByTerm === \"entree\"}\n                        onChange={this.handleTerm}\n                        variant='dark'>\n                        Entrees\n                    </ToggleButton>\n                    <ToggleButton type=\"radio\"\n                        name=\"radio\"\n                        value=\"dessert\"\n                        checked={this.state.filterByTerm === \"dessert\"}\n                        onChange={this.handleTerm}\n                        variant='dark'>\n                        Desserts\n                    </ToggleButton>\n                    <ToggleButton type=\"radio\"\n                        name=\"radio\"\n                        value=\"snack\"\n                        checked={this.state.filterByTerm === \"snack\"}\n                        onChange={this.handleTerm}\n                        variant='dark'>\n                        Snacks\n                    </ToggleButton>\n                    <ToggleButton type=\"radio\"\n                        name=\"radio\"\n                        value=\"drink\"\n                        checked={this.state.filterByTerm === \"drink\"}\n                        onChange={this.handleTerm}\n                        variant='dark'>\n                        Drinks\n                    </ToggleButton>\n                    <ToggleButton type=\"radio\"\n                        name=\"radio\"\n                        value=\"side\"\n                        checked={this.state.filterByTerm === \"side\"}\n                        onChange={this.handleTerm}\n                        variant='dark'>\n                        Sides\n                    </ToggleButton>\n                    <ToggleButton type=\"radio\"\n                        name=\"radio\"\n                        value=\"app\"\n                        checked={this.state.filterByTerm === \"app\"}\n                        onChange={this.handleTerm}\n                        variant='dark'>\n                        Appetizers\n                    </ToggleButton>\n\n\n                </ButtonGroup></div>\n\n            //if search Field is set to anything other than mealType, it sets searchBar to a text input that will live update due to how the onChange attribute works\n        } else {\n            searchBar =\n                <div className='form-group row'>\n                    <div className='col-xs-4'>\n                        <input placeholder='SearchTerm'\n                            value={this.state.filterByTerm}\n                            className='inputmargin form-control'\n                            type='text'\n                            onChange={this.handleTerm}>\n                        </input>\n                    </div>\n                </div>\n        }\n\n        return (\n\n            <div className='container pt-4' role='main'>\n                <br></br>\n                {/* <h3 className='mt-3 ml-2 display-3'>Basil</h3> */}\n                <img src={logo} width=\"200\" alt=\"github.com/klayne1129\" />\n                <br></br>\n                <br></br>\n                <div className='container '>\n                    <h5>Search by:</h5>\n                    <ButtonGroup toggle className=\"\" >\n                        <ToggleButton type=\"radio\"\n                            name=\"radio\"\n                            defaultChecked\n                            value=\"all\"\n                            checked={this.state.filterByField === \"all\"}\n                            onChange={this.handleFilter}\n                            variant='dark'>\n\n                            All\n                        </ToggleButton>\n                        <ToggleButton type=\"radio\"\n                            name=\"radio\"\n                            defaultChecked\n                            value=\"title\"\n                            checked={this.state.filterByField === \"title\"}\n                            onChange={this.handleFilter}\n                            variant='dark'>\n                            Name\n                        </ToggleButton>\n                        <ToggleButton type=\"radio\"\n                            name=\"radio\"\n                            defaultChecked\n                            value=\"ingredients\"\n                            checked={this.state.filterByField === \"ingredients\"}\n                            onChange={this.handleFilter}\n                            variant='dark'>\n                            Ingredients\n                        </ToggleButton>\n                        <ToggleButton type=\"radio\"\n                            name=\"radio\"\n                            defaultChecked\n                            value=\"mealType\"\n                            checked={this.state.filterByField === \"mealType\"}\n                            onChange={this.handleFilter}\n                            variant='dark'>\n                            Meal Type\n                        </ToggleButton>\n                        <ToggleButton type=\"radio\"\n                            name=\"radio\"\n                            defaultChecked\n                            value=\"tags\"\n                            checked={this.state.filterByField === \"tags\"}\n                            onChange={this.handleFilter}\n                            variant='dark'>\n                            Tags\n                        </ToggleButton>\n\n                    </ButtonGroup>\n\n                    {searchBar}\n\n                </div>\n\n                <CardColumns>{this.recipeList()}</CardColumns>\n            </div>\n        )\n    }\n}\n\n\nexport default SearchComponent"]},"metadata":{},"sourceType":"module"}