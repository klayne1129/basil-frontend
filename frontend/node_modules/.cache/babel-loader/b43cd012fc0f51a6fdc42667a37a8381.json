{"ast":null,"code":"import Axios from \"axios\";\nimport { JPA_API_URL } from '../../Constants.js';\n\nclass RecipeDataService {\n  //passing name as a parameter makes it customizable for users\n  //retrieves all the recipes the current user has saved.\n  retrieveAllRecipes(name) {\n    // console.log('executed service')\n    //tell promise to get desired url we created in java and eclipse\n    return Axios.get(`${JPA_API_URL}/users/${name}/recipes`);\n  } //retireves a specific recipe using the username and id of recipe\n\n\n  retrieveRecipe(name, id) {\n    return Axios.get(`${JPA_API_URL}/users/${name}/recipes/${id}`);\n  } //deletes recipe\n\n\n  deleteRecipe(name, id) {\n    return Axios.delete(`${JPA_API_URL}/users/${name}/recipes/${id}`);\n  } //updates recipe\n\n\n  updateRecipe(name, id, recipe) {\n    // console.log('executed service')\n    //tell promise to get desired url created in java/eclipse\n    return Axios.put(`${JPA_API_URL}/users/${name}/recipes/${id}`, recipe);\n  } //creates new recipe\n\n\n  createRecipe(name, recipe) {\n    // console.log('executed service')\n    //tell promise to get desired url created in java/eclipses\n    return Axios.post(`${JPA_API_URL}/users/${name}/recipes`, recipe);\n  }\n\n}\n\nexport default new RecipeDataService();","map":{"version":3,"sources":["/Users/KatieLayne/Documents/basil-app/basil-app/frontend/src/api/recipes/RecipeDataService.js"],"names":["Axios","JPA_API_URL","RecipeDataService","retrieveAllRecipes","name","get","retrieveRecipe","id","deleteRecipe","delete","updateRecipe","recipe","put","createRecipe","post"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,QAA0B,oBAA1B;;AAGA,MAAMC,iBAAN,CAAwB;AACpB;AAKA;AACAC,EAAAA,kBAAkB,CAACC,IAAD,EAAO;AACrB;AACA;AACA,WAAOJ,KAAK,CAACK,GAAN,CAAW,GAAEJ,WAAY,UAASG,IAAK,UAAvC,CAAP;AACH,GAXmB,CAapB;;;AACAE,EAAAA,cAAc,CAACF,IAAD,EAAOG,EAAP,EAAW;AAErB,WAAOP,KAAK,CAACK,GAAN,CAAW,GAAEJ,WAAY,UAASG,IAAK,YAAWG,EAAG,EAArD,CAAP;AACH,GAjBmB,CAmBpB;;;AACAC,EAAAA,YAAY,CAACJ,IAAD,EAAOG,EAAP,EAAW;AAEnB,WAAOP,KAAK,CAACS,MAAN,CAAc,GAAER,WAAY,UAASG,IAAK,YAAWG,EAAG,EAAxD,CAAP;AACH,GAvBmB,CAyBpB;;;AACAG,EAAAA,YAAY,CAACN,IAAD,EAAOG,EAAP,EAAWI,MAAX,EAAmB;AAC3B;AACA;AACA,WAAOX,KAAK,CAACY,GAAN,CAAW,GAAEX,WAAY,UAASG,IAAK,YAAWG,EAAG,EAArD,EAAwDI,MAAxD,CAAP;AACH,GA9BmB,CAgChB;;;AACJE,EAAAA,YAAY,CAACT,IAAD,EAAOO,MAAP,EAAe;AACvB;AACA;AACA,WAAOX,KAAK,CAACc,IAAN,CAAY,GAAEb,WAAY,UAASG,IAAK,UAAxC,EAAmDO,MAAnD,CAAP;AACH;;AArCmB;;AA0CxB,eAAe,IAAIT,iBAAJ,EAAf","sourcesContent":["import Axios from \"axios\"\nimport {JPA_API_URL} from '../../Constants.js'\n\n\nclass RecipeDataService {\n    //passing name as a parameter makes it customizable for users\n\n    \n\n\n    //retrieves all the recipes the current user has saved.\n    retrieveAllRecipes(name) {\n        // console.log('executed service')\n        //tell promise to get desired url we created in java and eclipse\n        return Axios.get(`${JPA_API_URL}/users/${name}/recipes`)   \n    }\n\n    //retireves a specific recipe using the username and id of recipe\n    retrieveRecipe(name, id) {\n        \n        return Axios.get(`${JPA_API_URL}/users/${name}/recipes/${id}`)   \n    }\n\n    //deletes recipe\n    deleteRecipe(name, id) {\n        \n        return Axios.delete(`${JPA_API_URL}/users/${name}/recipes/${id}`)   \n    }\n\n    //updates recipe\n    updateRecipe(name, id, recipe) {\n        // console.log('executed service')\n        //tell promise to get desired url created in java/eclipse\n        return Axios.put(`${JPA_API_URL}/users/${name}/recipes/${id}`, recipe)   \n    }\n\n        //creates new recipe\n    createRecipe(name, recipe) {\n        // console.log('executed service')\n        //tell promise to get desired url created in java/eclipses\n        return Axios.post(`${JPA_API_URL}/users/${name}/recipes`, recipe)   \n    }\n\n\n}\n\nexport default new RecipeDataService()"]},"metadata":{},"sourceType":"module"}