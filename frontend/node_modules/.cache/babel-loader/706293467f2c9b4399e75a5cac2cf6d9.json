{"ast":null,"code":"var _jsxFileName = \"/Users/KatieLayne/Documents/basil-app/basil-app/src/components/recipes/UserListComponent.jsx\";\nimport React, { Component } from 'react';\nimport UserDataService from '../../api/recipes/UserDataService.js';\nimport AuthenticationService from './AuthenticationService.js';\n\nclass UserListComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      users: [],\n      message: null\n    };\n    this.deleteUserClicked = this.deleteUserClicked.bind(this);\n    this.refreshUsers = this.refreshUsers.bind(this);\n  } //dont call initial api in the constructor\n  //if you do the state doesn't reinitialize until the api is finished \n\n\n  componentDidMount() {\n    console.log(\"component did Mount\");\n    this.refreshUsers();\n  }\n\n  refreshUsers() {\n    //use the username by using authentication service\n    let username = AuthenticationService.getLoggedInUser();\n    UserDataService.retrieveUsers(username).then(response => {\n      // console.log(response)\n      this.setState({\n        users: response.data\n      });\n    });\n  }\n\n  deleteUserClicked(id) {\n    let username = AuthenticationService.getLoggedInUser(); // console.log(id + \" \" + username)\n\n    UserDataService.deleteUser(username, id).then(response => {\n      this.setState({\n        message: `Deletion of user ${id} successful.`\n      });\n      this.refreshUsers();\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Active User List\"), this.state.message && React.createElement(\"div\", {\n      className: \"alert alert-success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, this.state.message), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Username\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Delete\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, this.state.users.map(user => React.createElement(\"tr\", {\n      key: user.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, user.username), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-danger\",\n      onClick: () => this.deleteUserClicked(user.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Delete\"))))))));\n  }\n\n}\n\nexport default UserListComponent;","map":{"version":3,"sources":["/Users/KatieLayne/Documents/basil-app/basil-app/src/components/recipes/UserListComponent.jsx"],"names":["React","Component","UserDataService","AuthenticationService","UserListComponent","constructor","props","state","users","message","deleteUserClicked","bind","refreshUsers","componentDidMount","console","log","username","getLoggedInUser","retrieveUsers","then","response","setState","data","id","deleteUser","render","map","user"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,eAAP,MAA4B,sCAA5B;AACA,OAAOC,qBAAP,MAAkC,4BAAlC;;AAIA,MAAMC,iBAAN,SAAgCH,SAAhC,CAA0C;AAEtCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,EADE;AAETC,MAAAA,OAAO,EAAE;AAFA,KAAb;AAIA,SAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CAAzB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACH,GAVqC,CAYtC;AACA;;;AACAE,EAAAA,iBAAiB,GAAG;AAEhBC,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACA,SAAKH,YAAL;AACH;;AAEDA,EAAAA,YAAY,GAAG;AAEX;AACA,QAAII,QAAQ,GAAGb,qBAAqB,CAACc,eAAtB,EAAf;AACAf,IAAAA,eAAe,CAACgB,aAAhB,CAA8BF,QAA9B,EACKG,IADL,CAEQC,QAAQ,IAAI;AACR;AACA,WAAKC,QAAL,CAAc;AAAEb,QAAAA,KAAK,EAAEY,QAAQ,CAACE;AAAlB,OAAd;AACH,KALT;AAOH;;AAEDZ,EAAAA,iBAAiB,CAACa,EAAD,EAAK;AAClB,QAAIP,QAAQ,GAAGb,qBAAqB,CAACc,eAAtB,EAAf,CADkB,CAElB;;AACAf,IAAAA,eAAe,CAACsB,UAAhB,CAA2BR,QAA3B,EAAqCO,EAArC,EACKJ,IADL,CAEQC,QAAQ,IAAI;AACR,WAAKC,QAAL,CAAc;AAAEZ,QAAAA,OAAO,EAAG,oBAAmBc,EAAG;AAAlC,OAAd;AACA,WAAKX,YAAL;AACH,KALT;AAOH;;AAIDa,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,EAEK,KAAKlB,KAAL,CAAWE,OAAX,IAAsB;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsC,KAAKF,KAAL,CAAWE,OAAjD,CAF3B,EAGI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,CADJ,CADJ,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQ,KAAKF,KAAL,CAAWC,KAAX,CAAiBkB,GAAjB,CACIC,IAAI,IAGA;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACJ,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKI,IAAI,CAACX,QAAV,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI;AAAQ,MAAA,SAAS,EAAC,gBAAlB;AAAmC,MAAA,OAAO,EAAE,MAAM,KAAKN,iBAAL,CAAuBiB,IAAI,CAACJ,EAA5B,CAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAJ,CAFJ,CAJR,CAFR,CATJ,CADJ,CAHJ,CADJ;AAiCH;;AAjFqC;;AAoF1C,eAAenB,iBAAf","sourcesContent":["\nimport React, { Component } from 'react'\nimport UserDataService from '../../api/recipes/UserDataService.js'\nimport AuthenticationService from './AuthenticationService.js'\n\n\n\nclass UserListComponent extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            users: [],\n            message: null\n        }\n        this.deleteUserClicked = this.deleteUserClicked.bind(this);\n        this.refreshUsers = this.refreshUsers.bind(this);\n    }\n\n    //dont call initial api in the constructor\n    //if you do the state doesn't reinitialize until the api is finished \n    componentDidMount() {\n\n        console.log(\"component did Mount\")\n        this.refreshUsers();\n    }\n\n    refreshUsers() {\n\n        //use the username by using authentication service\n        let username = AuthenticationService.getLoggedInUser()\n        UserDataService.retrieveUsers(username)\n            .then(\n                response => {\n                    // console.log(response)\n                    this.setState({ users: response.data })\n                }\n            )\n    }\n\n    deleteUserClicked(id) {\n        let username = AuthenticationService.getLoggedInUser()\n        // console.log(id + \" \" + username)\n        UserDataService.deleteUser(username, id)\n            .then(\n                response => {\n                    this.setState({ message: `Deletion of user ${id} successful.` })\n                    this.refreshUsers()\n                }\n            )\n    }\n   \n\n\n    render() {\n        return (\n            <div>\n                <h1>Active User List</h1>\n                {this.state.message && <div className=\"alert alert-success\">{this.state.message}</div>}\n                <div className=\"container\">\n                    <table className=\"table\">\n                        <thead>\n                            <tr>\n                                <th>Username</th>\n                                <th>Delete</th>\n\n\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                this.state.users.map(\n                                    user =>\n\n\n                                        <tr key={user.id}>\n                                            <td>{user.username}</td>\n                                            <td><button className=\"btn btn-danger\" onClick={() => this.deleteUserClicked(user.id)} >Delete</button></td>\n                                        </tr>\n                                )\n                            }\n\n                        </tbody>\n                    </table>\n\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default UserListComponent"]},"metadata":{},"sourceType":"module"}