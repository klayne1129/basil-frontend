{"ast":null,"code":"var _jsxFileName = \"/Users/KatieLayne/Documents/basil-app/basil-app/src/components/recipes/ListRecipesComponent.jsx\";\nimport React, { Component } from 'react';\nimport RecipeDataService from '../../api/recipes/RecipeDataService.js';\nimport AuthenticationService from './AuthenticationService.js';\n\nclass ListRecipesComponent extends Component {\n  // hardcoding some table information for learning. Will replace\n  constructor(props) {\n    super(props);\n    this.state = {\n      recipes: [],\n      message: null\n    };\n    this.deleteRecipeClicked = this.deleteRecipeClicked.bind(this);\n    this.refreshRecipes = this.refreshRecipes.bind(this);\n  } //dont call initial api in the constructor\n  //if you do the state doesn't reinitialize until the api is finished \n\n\n  componentDidMount() {\n    console.log(\"component did Mount\");\n    this.refreshRecipes();\n  }\n\n  refreshRecipes() {\n    //use the username by using authentication service\n    let username = AuthenticationService.getLoggedInUser();\n    RecipeDataService.retrieveAllRecipes(username).then(response => {\n      // console.log(response)\n      this.setState({\n        recipes: response.data\n      });\n    });\n  }\n\n  deleteRecipeClicked(id) {\n    let username = AuthenticationService.getLoggedInUser(); // console.log(id + \" \" + username)\n\n    RecipeDataService.deleteRecipe(username, id).then(response => {\n      this.setState({\n        message: `Delete of recipe ${id} successful.`\n      });\n      this.refreshRecipes();\n    });\n  }\n\n  updateRecipeClicked(id) {\n    console.log('update'); // let username = AuthenticationService.getLoggedInUser()\n    // // console.log(id + \" \" + username)\n    // RecipeDataService.deleteRecipe(username, id)\n    // .then (\n    //     response => {\n    //         this.setState({message : `Delete of recipe ${id} successful.`})\n    //         this.refreshRecipes()\n    //     }\n    // )\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"List of Recipes\"), this.state.message && React.createElement(\"div\", {\n      className: \"alert alert-success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, this.state.message), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Directions\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Ingredients\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Edit\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Delete\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, this.state.recipes.map(recipe => React.createElement(\"tr\", {\n      key: recipe.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, recipe.name), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, recipe.directions), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, recipe.ingredients), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-success\",\n      onClick: () => this.updateRecipeClicked(recipe.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Edit\")), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-warning\",\n      onClick: () => this.deleteRecipeClicked(recipe.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Delete\"))))))));\n  }\n\n}\n\nexport default ListRecipesComponent;","map":{"version":3,"sources":["/Users/KatieLayne/Documents/basil-app/basil-app/src/components/recipes/ListRecipesComponent.jsx"],"names":["React","Component","RecipeDataService","AuthenticationService","ListRecipesComponent","constructor","props","state","recipes","message","deleteRecipeClicked","bind","refreshRecipes","componentDidMount","console","log","username","getLoggedInUser","retrieveAllRecipes","then","response","setState","data","id","deleteRecipe","updateRecipeClicked","render","map","recipe","name","directions","ingredients"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport RecipeDataService from '../../api/recipes/RecipeDataService.js'\nimport AuthenticationService from './AuthenticationService.js'\n\nclass ListRecipesComponent extends Component{\n    // hardcoding some table information for learning. Will replace\n    constructor(props){\n        super(props)\n        this.state = {\n            recipes : [],\n            message: null\n        }\n        this.deleteRecipeClicked = this.deleteRecipeClicked.bind(this);\n        this.refreshRecipes = this.refreshRecipes.bind(this);\n    }\n\n    //dont call initial api in the constructor\n    //if you do the state doesn't reinitialize until the api is finished \n    componentDidMount() {\n        console.log(\"component did Mount\")\n        this.refreshRecipes();\n    }\n\n    refreshRecipes(){\n\n        //use the username by using authentication service\n        let username = AuthenticationService.getLoggedInUser()\n        RecipeDataService.retrieveAllRecipes(username)\n            .then(\n                response => {\n                    // console.log(response)\n                    this.setState({recipes : response.data})\n                }\n            )\n    }\n\n    deleteRecipeClicked(id) {\n        let username = AuthenticationService.getLoggedInUser()\n        // console.log(id + \" \" + username)\n        RecipeDataService.deleteRecipe(username, id)\n        .then (\n            response => {\n                this.setState({message : `Delete of recipe ${id} successful.`})\n                this.refreshRecipes()\n            }\n        )\n    }\n\n    updateRecipeClicked(id) {\n        console.log('update')\n        // let username = AuthenticationService.getLoggedInUser()\n        // // console.log(id + \" \" + username)\n        // RecipeDataService.deleteRecipe(username, id)\n        // .then (\n        //     response => {\n        //         this.setState({message : `Delete of recipe ${id} successful.`})\n        //         this.refreshRecipes()\n        //     }\n        // )\n    }\n\n    render() {\n        return  (   \n                     <div>\n                        <h1>List of Recipes</h1>\n                        {this.state.message && <div className=\"alert alert-success\">{this.state.message}</div>}\n                        <div className=\"container\">\n                            <table className=\"table\">\n                                <thead>\n                                    <tr>\n                                        <th>Name</th>\n                                        <th>Directions</th>\n                                        <th>Ingredients</th>\n                                        <th>Edit</th>\n                                        <th>Delete</th>\n\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {\n                                        this.state.recipes.map (\n                                            recipe =>\n\n                                        \n                                            <tr key={recipe.id}>\n                                                <td>{recipe.name}</td>\n                                                <td>{recipe.directions}</td>\n                                                <td>{recipe.ingredients}</td>\n                                                <td><button className=\"btn btn-success\" onClick={() => this.updateRecipeClicked(recipe.id)} >Edit</button></td>\n                                                <td><button className=\"btn btn-warning\" onClick={() => this.deleteRecipeClicked(recipe.id)} >Delete</button></td>\n                                            \n                                            </tr>\n                                        )\n                                    }\n\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                )\n    }\n}\n\nexport default ListRecipesComponent"]},"metadata":{},"sourceType":"module"}